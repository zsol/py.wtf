{"name": "boto3", "metadata": {"name": "boto3", "version": "1.37.4", "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9"], "home_page": "https://github.com/boto/boto3", "license": "Apache License 2.0", "documentation_url": "https://boto3.amazonaws.com/v1/documentation/api/latest/index.html", "dependencies": ["botocore", "jmespath", "s3transfer"], "summary": "The AWS SDK for Python", "upload_time": 1740774643}, "documentation": ["---\nsubstitutions:\n  License: |-\n    ```{image} http://img.shields.io/pypi/l/boto3.svg?style=flat\n    :alt: License\n    :target: https://github.com/boto/boto3/blob/develop/LICENSE\n    ```\n  Python: |-\n    ```{image} https://img.shields.io/pypi/pyversions/boto3.svg?style=flat\n    :alt: Python Versions\n    :target: https://pypi.python.org/pypi/boto3/\n    ```\n  Version: |-\n    ```{image} http://img.shields.io/pypi/v/boto3.svg?style=flat\n    :alt: Package Version\n    :target: https://pypi.python.org/pypi/boto3/\n    ```\n---\n\n# Boto3 - The AWS SDK for Python\n\n{{ Version }} {{ Python }} {{ License }}\n\nBoto3 is the Amazon Web Services (AWS) Software Development Kit (SDK) for\nPython, which allows Python developers to write software that makes use\nof services like Amazon S3 and Amazon EC2. You can find the latest, most\nup to date, documentation at our [doc site], including a list of\nservices that are supported.\n\nBoto3 is maintained and published by [Amazon Web Services].\n\nBoto (pronounced boh-toh) was named after the fresh water dolphin native to the Amazon river. The name was chosen by the author of the original Boto library, Mitch Garnaat, as a reference to the company.\n\n## Notices\n\nOn 2023-12-13, support for Python 3.7 ended for Boto3. This follows the\nPython Software Foundation [end of support](https://peps.python.org/pep-0537/#lifespan)\nfor the runtime which occurred on 2023-06-27.\nFor more information, see this [blog post](https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/).\n\n## Getting Started\n\nAssuming that you have a supported version of Python installed, you can first\nset up your environment with:\n\n```sh\n$ python -m venv .venv\n...\n$ . .venv/bin/activate\n```\n\nThen, you can install boto3 from PyPI with:\n\n```sh\n$ python -m pip install boto3\n```\n\nor install from source with:\n\n```sh\n$ git clone https://github.com/boto/boto3.git\n$ cd boto3\n$ python -m pip install -r requirements.txt\n$ python -m pip install -e .\n```\n\n### Using Boto3\n\nAfter installing boto3\n\nNext, set up credentials (in e.g. `~/.aws/credentials`):\n\n```ini\n[default]\naws_access_key_id = YOUR_KEY\naws_secret_access_key = YOUR_SECRET\n```\n\nThen, set up a default region (in e.g. `~/.aws/config`):\n\n```ini\n[default]\nregion=us-east-1\n```\n\nOther credential configuration methods can be found [here](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html)\n\nThen, from a Python interpreter:\n\n```python\n>>> import boto3\n>>> s3 = boto3.resource('s3')\n>>> for bucket in s3.buckets.all():\n        print(bucket.name)\n```\n\n### Running Tests\n\nYou can run tests in all supported Python versions using `tox`. By default,\nit will run all of the unit and functional tests, but you can also specify your own\n`pytest` options. Note that this requires that you have all supported\nversions of Python installed, otherwise you must pass `-e` or run the\n`pytest` command directly:\n\n```sh\n$ tox\n$ tox -- unit/test_session.py\n$ tox -e py26,py33 -- integration/\n```\n\nYou can also run individual tests with your default Python version:\n\n```sh\n$ pytest tests/unit\n```\n\n## Getting Help\n\nWe use GitHub issues for tracking bugs and feature requests and have limited\nbandwidth to address them. Please use these community resources for getting\nhelp:\n\n- Ask a question on [Stack Overflow](https://stackoverflow.com/) and tag it with [boto3](https://stackoverflow.com/questions/tagged/boto3)\n- Open a support ticket with [AWS Support](https://console.aws.amazon.com/support/home#/)\n- If it turns out that you may have found a bug, please [open an issue](https://github.com/boto/boto3/issues/new)\n\n## Contributing\n\nWe value feedback and contributions from our community. Whether it's a bug report, new feature, correction, or additional documentation, we welcome your issues and pull requests. Please read through this [CONTRIBUTING](https://github.com/boto/boto3/blob/develop/CONTRIBUTING.rst) document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your contribution.\n\n## Maintenance and Support for SDK Major Versions\n\nBoto3 was made generally available on 06/22/2015 and is currently in the full support phase of the availability life cycle.\n\nFor information about maintenance and support for SDK major versions and their underlying dependencies, see the following in the AWS SDKs and Tools Shared Configuration and Credentials Reference Guide:\n\n- [AWS SDKs and Tools Maintenance Policy](https://docs.aws.amazon.com/sdkref/latest/guide/maint-policy.html)\n- [AWS SDKs and Tools Version Support Matrix](https://docs.aws.amazon.com/sdkref/latest/guide/version-support-matrix.html)\n\n## More Resources\n\n- [NOTICE](https://github.com/boto/boto3/blob/develop/NOTICE)\n- [Changelog](https://github.com/boto/boto3/blob/develop/CHANGELOG.rst)\n- [License](https://github.com/boto/boto3/blob/develop/LICENSE)\n\n[amazon web services]: https://aws.amazon.com/what-is-aws/\n[boto]: https://docs.pythonboto.org/\n[doc site]: https://boto3.amazonaws.com/v1/documentation/api/latest/index.html\n"], "modules": [{"name": "boto3.exceptions", "documentation": ["Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License.", "All exceptions in this class should subclass from Boto3Error."], "functions": [], "variables": [{"name": "boto3.exceptions.DynanmoDBOperationNotSupportedError", "type": null, "documentation": []}], "classes": [{"name": "boto3.exceptions.Boto3Error", "bases": ["Exception"], "methods": [], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Base class for all Boto3 errors.", "All exceptions should subclass from Boto3Error in this module."]}, {"name": "boto3.exceptions.ResourceLoadException", "bases": ["Boto3Error"], "methods": [], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.exceptions.NoVersionFound", "bases": ["Boto3Error"], "methods": [], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["NOTE: This doesn't appear to be used anywhere.", "It's probably safe to remove this."]}, {"name": "boto3.exceptions.UnknownAPIVersionError", "bases": ["Boto3Error", "botocore.exceptions.DataNotFoundError"], "methods": [{"name": "boto3.exceptions.UnknownAPIVersionError.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "service_name", "type": null, "default": null}, {"name": "bad_api_version", "type": null, "default": null}, {"name": "available_api_versions", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["We're subclassing from botocore.exceptions.DataNotFoundError", "to keep backwards compatibility with anyone that was catching", "this low level Botocore error before this exception was", "introduced in boto3.", "Same thing for ResourceNotExistsError below."]}, {"name": "boto3.exceptions.ResourceNotExistsError", "bases": ["Boto3Error", "botocore.exceptions.DataNotFoundError"], "methods": [{"name": "boto3.exceptions.ResourceNotExistsError.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "service_name", "type": null, "default": null}, {"name": "available_services", "type": null, "default": null}, {"name": "has_low_level_client", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Raised when you attempt to create a resource that does not exist."]}, {"name": "boto3.exceptions.RetriesExceededError", "bases": ["Boto3Error"], "methods": [{"name": "boto3.exceptions.RetriesExceededError.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "last_exception", "type": null, "default": null}, {"name": "msg", "type": null, "default": "..."}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.exceptions.S3TransferFailedError", "bases": ["Boto3Error"], "methods": [], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.exceptions.S3UploadFailedError", "bases": ["Boto3Error"], "methods": [], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.exceptions.DynamoDBOperationNotSupportedError", "bases": ["Boto3Error"], "methods": [{"name": "boto3.exceptions.DynamoDBOperationNotSupportedError.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "operation", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Raised for operations that are not supported for an operand."]}, {"name": "boto3.exceptions.DynamoDBNeedsConditionError", "bases": ["Boto3Error"], "methods": [{"name": "boto3.exceptions.DynamoDBNeedsConditionError.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Raised when input is not a condition"]}, {"name": "boto3.exceptions.DynamoDBNeedsKeyConditionError", "bases": ["Boto3Error"], "methods": [], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.exceptions.PythonDeprecationWarning", "bases": ["Warning"], "methods": [], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Python version being used is scheduled to become unsupported\nin an future release. See warning for specifics."]}], "exports": []}, {"name": "boto3.crt", "documentation": ["This file contains private functionality for interacting with the AWS\nCommon Runtime library (awscrt) in boto3.\n\nAll code contained within this file is for internal usage within this\nproject and is not intended for external consumption. All interfaces\ncontained within are subject to abrupt breaking changes.", "Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.crt._create_crt_client", "asynchronous": false, "params": [{"name": "session", "type": null, "default": null}, {"name": "config", "type": null, "default": null}, {"name": "region_name", "type": null, "default": null}, {"name": "cred_provider", "type": null, "default": null}], "returns": null, "documentation": ["Create a CRT S3 Client for file transfer.\n\nInstantiating many of these may lead to degraded performance or\nsystem resource exhaustion."]}, {"name": "boto3.crt._create_crt_request_serializer", "asynchronous": false, "params": [{"name": "session", "type": null, "default": null}, {"name": "region_name", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.crt._create_crt_s3_client", "asynchronous": false, "params": [{"name": "session", "type": null, "default": null}, {"name": "config", "type": null, "default": null}, {"name": "region_name", "type": null, "default": null}, {"name": "credentials", "type": null, "default": null}, {"name": "lock", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Create boto3 wrapper class to manage crt lock reference and S3 client."]}, {"name": "boto3.crt._initialize_crt_transfer_primatives", "asynchronous": false, "params": [{"name": "client", "type": null, "default": null}, {"name": "config", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.crt.get_crt_s3_client", "asynchronous": false, "params": [{"name": "client", "type": null, "default": null}, {"name": "config", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.crt.is_crt_compatible_request", "asynchronous": false, "params": [{"name": "client", "type": null, "default": null}, {"name": "crt_s3_client", "type": null, "default": null}], "returns": null, "documentation": ["Boto3 client must use same signing region and credentials\nas the CRT_S3_CLIENT singleton. Otherwise fallback to classic."]}, {"name": "boto3.crt.compare_identity", "asynchronous": false, "params": [{"name": "boto3_creds", "type": null, "default": null}, {"name": "crt_s3_creds", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.crt.create_crt_transfer_manager", "asynchronous": false, "params": [{"name": "client", "type": null, "default": null}, {"name": "config", "type": null, "default": null}], "returns": null, "documentation": ["Create a CRTTransferManager for optimized data transfer."]}], "variables": [{"name": "boto3.crt.CRT_S3_CLIENT", "type": null, "documentation": []}, {"name": "boto3.crt.BOTOCORE_CRT_SERIALIZER", "type": null, "documentation": []}, {"name": "boto3.crt.CLIENT_CREATION_LOCK", "type": null, "documentation": []}, {"name": "boto3.crt.PROCESS_LOCK_NAME", "type": null, "documentation": []}], "classes": [{"name": "boto3.crt.CRTS3Client", "bases": [], "methods": [{"name": "boto3.crt.CRTS3Client.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "crt_client", "type": null, "default": null}, {"name": "process_lock", "type": null, "default": null}, {"name": "region", "type": null, "default": null}, {"name": "cred_provider", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["This wrapper keeps track of our underlying CRT client, the lock used to\nacquire it and the region we've used to instantiate the client.\n\nDue to limitations in the existing CRT interfaces, we can only make calls\nin a single region and does not support redirects. We track the region to\nensure we don't use the CRT client when a successful request cannot be made."]}], "exports": []}, {"name": "boto3.resources.base", "documentation": ["Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [{"name": "boto3.resources.base.logger", "type": null, "documentation": []}], "classes": [{"name": "boto3.resources.base.ResourceMeta", "bases": [], "methods": [{"name": "boto3.resources.base.ResourceMeta.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "service_name", "type": null, "default": null}, {"name": "identifiers", "type": null, "default": "..."}, {"name": "client", "type": null, "default": "..."}, {"name": "data", "type": null, "default": "..."}, {"name": "resource_model", "type": null, "default": "..."}], "returns": null, "documentation": []}, {"name": "boto3.resources.base.ResourceMeta.__repr__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.base.ResourceMeta.__eq__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.base.ResourceMeta.copy", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Create a copy of this metadata object."]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["An object containing metadata about a resource."]}, {"name": "boto3.resources.base.ServiceResource", "bases": [], "methods": [{"name": "boto3.resources.base.ServiceResource.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.base.ServiceResource.__repr__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.base.ServiceResource.__eq__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.base.ServiceResource.__hash__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [{"name": "boto3.resources.base.ServiceResource.meta", "type": null, "documentation": ["Stores metadata about this resource instance, such as the\n`service_name`, the low-level `client` and any cached `data`\nfrom when the instance was hydrated. For example:\n\n```\n# Get a low-level client from a resource instance\nclient = resource.meta.client\nresponse = client.operation(Param='foo')\n\n# Print the resource instance's service short name\nprint(resource.meta.service_name)\n```\n\nSee {py:class}`ResourceMeta` for more information.\n"]}], "instance_variables": [], "inner_classes": [], "documentation": ["A base class for resources.\n\n```\ntype client\n\nbotocore.client\n\nparam client\n\nA low-level Botocore client instance\n```\n"]}], "exports": []}, {"name": "boto3.resources", "documentation": [], "functions": [], "variables": [], "classes": [], "exports": []}, {"name": "boto3.resources.response", "documentation": ["Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.resources.response.all_not_none", "asynchronous": false, "params": [{"name": "iterable", "type": null, "default": null}], "returns": null, "documentation": ["Return True if all elements of the iterable are not None (or if the\niterable is empty). This is like the built-in `all`, except checks\nagainst None, so 0 and False are allowable values.\n"]}, {"name": "boto3.resources.response.build_identifiers", "asynchronous": false, "params": [{"name": "identifiers", "type": null, "default": null}, {"name": "parent", "type": null, "default": null}, {"name": "params", "type": null, "default": "..."}, {"name": "raw_response", "type": null, "default": "..."}], "returns": null, "documentation": ["Builds a mapping of identifier names to values based on the\nidentifier source location, type, and target. Identifier\nvalues may be scalars or lists depending on the source type\nand location.\n\n```\ntype identifiers\n\nlist\n\nparam identifiers\n\nList of \ndefinitions\n\ntype parent\n\nServiceResource\n\nparam parent\n\nThe resource instance to which this action is attached.\n\ntype params\n\ndict\n\nparam params\n\nRequest parameters sent to the service.\n\ntype raw_response\n\ndict\n\nparam raw_response\n\nLow-level operation response.\n\nrtype\n\nlist\n\nreturn\n\nAn ordered list of (name, value) identifier tuples.\n```\n"]}, {"name": "boto3.resources.response.build_empty_response", "asynchronous": false, "params": [{"name": "search_path", "type": null, "default": null}, {"name": "operation_name", "type": null, "default": null}, {"name": "service_model", "type": null, "default": null}], "returns": null, "documentation": ["Creates an appropriate empty response for the type that is expected,\nbased on the service model's shape type. For example, a value that\nis normally a list would then return an empty list. A structure would\nreturn an empty dict, and a number would return None.\n\n```\ntype search_path\n\nstring\n\nparam search_path\n\nJMESPath expression to search in the response\n\ntype operation_name\n\nstring\n\nparam operation_name\n\nName of the underlying service operation.\n\ntype service_model\n\n\n\nparam service_model\n\nThe Botocore service model\n\nrtype\n\ndict, list, or None\n\nreturn\n\nAn appropriate empty value\n```\n"]}], "variables": [], "classes": [{"name": "boto3.resources.response.RawHandler", "bases": [], "methods": [{"name": "boto3.resources.response.RawHandler.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "search_path", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.response.RawHandler.__call__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "parent", "type": null, "default": null}, {"name": "params", "type": null, "default": null}, {"name": "response", "type": null, "default": null}], "returns": null, "documentation": ["---\nparam params: Request parameters sent to the service.\nparam parent: The resource instance to which this action is attached.\nparam response: Low-level operation response.\ntype params: dict\ntype parent: ServiceResource\ntype response: dict\n---\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A raw action response handler. This passed through the response\ndictionary, optionally after performing a JMESPath search if one\nhas been defined for the action.\n\n```\ntype search_path\n\nstring\n\nparam search_path\n\nJMESPath expression to search in the response\n\nrtype\n\ndict\n\nreturn\n\nService response\n```\n"]}, {"name": "boto3.resources.response.ResourceHandler", "bases": [], "methods": [{"name": "boto3.resources.response.ResourceHandler.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "search_path", "type": null, "default": null}, {"name": "factory", "type": null, "default": null}, {"name": "resource_model", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}, {"name": "operation_name", "type": null, "default": "..."}], "returns": null, "documentation": []}, {"name": "boto3.resources.response.ResourceHandler.__call__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "parent", "type": null, "default": null}, {"name": "params", "type": null, "default": null}, {"name": "response", "type": null, "default": null}], "returns": null, "documentation": ["---\nparam params: Request parameters sent to the service.\nparam parent: The resource instance to which this action is attached.\nparam response: Low-level operation response.\ntype params: dict\ntype parent: ServiceResource\ntype response: dict\n---\n"]}, {"name": "boto3.resources.response.ResourceHandler.handle_response_item", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "resource_cls", "type": null, "default": null}, {"name": "parent", "type": null, "default": null}, {"name": "identifiers", "type": null, "default": null}, {"name": "resource_data", "type": null, "default": null}], "returns": null, "documentation": ["Handles the creation of a single response item by setting\nparameters and creating the appropriate resource instance.\n\n```\ntype resource_cls\n\nServiceResource subclass\n\nparam resource_cls\n\nThe resource class to instantiate.\n\ntype parent\n\nServiceResource\n\nparam parent\n\nThe resource instance to which this action is attached.\n\ntype identifiers\n\ndict\n\nparam identifiers\n\nMap of identifier names to value or values.\n\ntype resource_data\n\ndict or None\n\nparam resource_data\n\nData for resource attributes.\n\nrtype\n\nServiceResource\n\nreturn\n\nNew resource instance.\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Creates a new resource or list of new resources from the low-level\nresponse based on the given response resource definition.\n\n```\ntype search_path\n\nstring\n\nparam search_path\n\nJMESPath expression to search in the response\n\ntype factory\n\nResourceFactory\n\nparam factory\n\nThe factory that created the resource class to which\nthis action is attached.\n\ntype resource_model\n\n\n\nparam resource_model\n\nResponse resource model.\n\ntype service_context\n\n\n\nparam service_context\n\nContext about the AWS service\n\ntype operation_name\n\nstring\n\nparam operation_name\n\nName of the underlying service operation, if it\nexists.\n\nrtype\n\nServiceResource or list\n\nreturn\n\nNew resource instance(s).\n```\n"]}], "exports": []}, {"name": "boto3.resources.factory", "documentation": ["Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [{"name": "boto3.resources.factory.logger", "type": null, "documentation": []}], "classes": [{"name": "boto3.resources.factory.ResourceFactory", "bases": [], "methods": [{"name": "boto3.resources.factory.ResourceFactory.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "emitter", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.factory.ResourceFactory.load_from_definition", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "single_resource_json_definition", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Loads a resource from a model, creating a new\n{py:class}`~boto3.resources.base.ServiceResource` subclass\nwith the correct properties and methods, named based on the service\nand resource name, e.g. EC2.Instance.\n\n```\ntype resource_name\n\nstring\n\nparam resource_name\n\nName of the resource to look up. For services,\nthis should match the service_name.\n\ntype single_resource_json_definition\n\ndict\n\nparam single_resource_json_definition\n\nThe loaded json of a single service resource or resource\ndefinition.\n\ntype service_context\n\n\n\nparam service_context\n\nContext about the AWS service\n\nrtype\n\nSubclass of \n\nreturn\n\nThe service or resource class.\n```\n"]}, {"name": "boto3.resources.factory.ResourceFactory._load_identifiers", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "attrs", "type": null, "default": null}, {"name": "meta", "type": null, "default": null}, {"name": "resource_model", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}], "returns": null, "documentation": ["Populate required identifiers. These are arguments without which\nthe resource cannot be used. Identifiers become arguments for\noperations on the resource."]}, {"name": "boto3.resources.factory.ResourceFactory._load_actions", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "attrs", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "resource_model", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Actions on the resource become methods, with the `load` method\nbeing a special case which sets internal data for attributes, and\n`reload` is an alias for `load`.\n"]}, {"name": "boto3.resources.factory.ResourceFactory._load_attributes", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "attrs", "type": null, "default": null}, {"name": "meta", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "resource_model", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Load resource attributes based on the resource shape. The shape\nname is referenced in the resource JSON, but the shape itself\nis defined in the Botocore service JSON, hence the need for\naccess to the `service_model`.\n"]}, {"name": "boto3.resources.factory.ResourceFactory._load_collections", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "attrs", "type": null, "default": null}, {"name": "resource_model", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Load resource collections from the model. Each collection becomes\na {py:class}`~boto3.resources.collection.CollectionManager` instance\non the resource instance, which allows you to iterate and filter\nthrough the collection's items.\n"]}, {"name": "boto3.resources.factory.ResourceFactory._load_has_relations", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "attrs", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "resource_model", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Load related resources, which are defined via a `has`\nrelationship but conceptually come in two forms:\n\n1. A reference, which is a related resource instance and can be\n   `None`, such as an EC2 instance's `vpc`.\n2. A subresource, which is a resource constructor that will always\n   return a resource instance which shares identifiers/data with\n   this resource, such as `s3.Bucket('name').Object('key')`.\n"]}, {"name": "boto3.resources.factory.ResourceFactory._create_available_subresources_command", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "attrs", "type": null, "default": null}, {"name": "subresources", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.factory.ResourceFactory._load_waiters", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "attrs", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "resource_model", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Load resource waiters from the model. Each waiter allows you to\nwait until a resource reaches a specific state by polling the state\nof the resource."]}, {"name": "boto3.resources.factory.ResourceFactory._create_identifier", "asynchronous": false, "params": [{"name": "factory_self", "type": null, "default": null}, {"name": "identifier", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}], "returns": null, "documentation": ["Creates a read-only property for identifier attributes."]}, {"name": "boto3.resources.factory.ResourceFactory._create_identifier_alias", "asynchronous": false, "params": [{"name": "factory_self", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "identifier", "type": null, "default": null}, {"name": "member_model", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Creates a read-only property that aliases an identifier."]}, {"name": "boto3.resources.factory.ResourceFactory._create_autoload_property", "asynchronous": false, "params": [{"name": "factory_self", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "name", "type": null, "default": null}, {"name": "snake_cased", "type": null, "default": null}, {"name": "member_model", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Creates a new property on the resource to lazy-load its value\nvia the resource's `load` method (if it exists).\n"]}, {"name": "boto3.resources.factory.ResourceFactory._create_waiter", "asynchronous": false, "params": [{"name": "factory_self", "type": null, "default": null}, {"name": "resource_waiter_model", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Creates a new wait method for each resource where both a waiter and\nresource model is defined."]}, {"name": "boto3.resources.factory.ResourceFactory._create_collection", "asynchronous": false, "params": [{"name": "factory_self", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "collection_model", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Creates a new property on the resource to lazy-load a collection."]}, {"name": "boto3.resources.factory.ResourceFactory._create_reference", "asynchronous": false, "params": [{"name": "factory_self", "type": null, "default": null}, {"name": "reference_model", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Creates a new property on the resource to lazy-load a reference."]}, {"name": "boto3.resources.factory.ResourceFactory._create_class_partial", "asynchronous": false, "params": [{"name": "factory_self", "type": null, "default": null}, {"name": "subresource_model", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": ["Creates a new method which acts as a functools.partial, passing\nalong the instance's low-level `client` to the new resource\nclass' constructor."]}, {"name": "boto3.resources.factory.ResourceFactory._create_action", "asynchronous": false, "params": [{"name": "factory_self", "type": null, "default": null}, {"name": "action_model", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}, {"name": "is_load", "type": null, "default": "..."}], "returns": null, "documentation": ["Creates a new method which makes a request to the underlying\nAWS service."]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A factory to create new {py:class}`~boto3.resources.base.ServiceResource`\nclasses from a {py:class}`~boto3.resources.model.ResourceModel`. There are\ntwo types of lookups that can be done: one on the service itself (e.g. an\nSQS resource) and another on models contained within the service (e.g. an\nSQS Queue resource).\n"]}], "exports": []}, {"name": "boto3.resources.params", "documentation": ["Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.resources.params.get_data_member", "asynchronous": false, "params": [{"name": "parent", "type": null, "default": null}, {"name": "path", "type": null, "default": null}], "returns": null, "documentation": ["Get a data member from a parent using a JMESPath search query,\nloading the parent if required. If the parent cannot be loaded\nand no data is present then an exception is raised.\n\n```\ntype parent\n\nServiceResource\n\nparam parent\n\nThe resource instance to which contains data we\nare interested in.\n\ntype path\n\nstring\n\nparam path\n\nThe JMESPath expression to query\n\nraises ResourceLoadException\n\nWhen no data is present and the\nresource cannot be loaded.\n\nreturns\n\nThe queried data or None.\n```\n"]}, {"name": "boto3.resources.params.create_request_parameters", "asynchronous": false, "params": [{"name": "parent", "type": null, "default": null}, {"name": "request_model", "type": null, "default": null}, {"name": "params", "type": null, "default": "..."}, {"name": "index", "type": null, "default": "..."}], "returns": null, "documentation": ["Handle request parameters that can be filled in from identifiers,\nresource data members or constants.\n\nBy passing `params`, you can invoke this method multiple times and\nbuild up a parameter dict over time, which is particularly useful\nfor reverse JMESPath expressions that append to lists.\n\n```\ntype parent\n\nServiceResource\n\nparam parent\n\nThe resource instance to which this action is attached.\n\ntype request_model\n\n\n\nparam request_model\n\nThe action request model.\n\ntype params\n\ndict\n\nparam params\n\nIf set, then add to this existing dict. It is both\nedited in-place and returned.\n\ntype index\n\nint\n\nparam index\n\nThe position of an item within a list\n\nrtype\n\ndict\n\nreturn\n\nPre-filled parameters to be sent to the request operation.\n```\n"]}, {"name": "boto3.resources.params.build_param_structure", "asynchronous": false, "params": [{"name": "params", "type": null, "default": null}, {"name": "target", "type": null, "default": null}, {"name": "value", "type": null, "default": null}, {"name": "index", "type": null, "default": "..."}], "returns": null, "documentation": ["This method provides a basic reverse JMESPath implementation that\nlets you go from a JMESPath-like string to a possibly deeply nested\nobject. The `params` are mutated in-place, so subsequent calls\ncan modify the same element by its index.\n\n> ```pycon\n> >>> build_param_structure(params, 'test[0]', 1)\n> >>> print(params)\n> {'test': [1]}\n> ```\n>\n> ```pycon\n> >>> build_param_structure(params, 'foo.bar[0].baz', 'hello world')\n> >>> print(params)\n> {'test': [1], 'foo': {'bar': [{'baz': 'hello, world'}]}}\n> ```\n"]}], "variables": [{"name": "boto3.resources.params.INDEX_RE", "type": null, "documentation": []}], "classes": [], "exports": []}, {"name": "boto3.utils", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.utils.import_module", "asynchronous": false, "params": [{"name": "name", "type": null, "default": null}], "returns": null, "documentation": ["Import module given a name.\n\nDoes not support relative imports."]}, {"name": "boto3.utils.lazy_call", "asynchronous": false, "params": [{"name": "full_name", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.utils.inject_attribute", "asynchronous": false, "params": [{"name": "class_attributes", "type": null, "default": null}, {"name": "name", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}], "variables": [{"name": "boto3.utils._ServiceContext", "type": null, "documentation": []}], "classes": [{"name": "boto3.utils.ServiceContext", "bases": ["_ServiceContext"], "methods": [], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Provides important service-wide, read-only information about a service\n\n```\ntype service_name\n\nstr\n\nparam service_name\n\nThe name of the service\n\ntype service_model\n\n\n\nparam service_model\n\nThe model of the service.\n\ntype service_waiter_model\n\n or\na waiter model-like object such as\n\n\nparam service_waiter_model\n\nThe waiter model of the service.\n\ntype resource_json_definitions\n\ndict\n\nparam resource_json_definitions\n\nThe loaded json models of all resource\nshapes for a service. It is equivalient of loading a\nresource-1.json and retrieving the value at the key \"resources\".\n```\n"]}, {"name": "boto3.utils.LazyLoadedWaiterModel", "bases": [], "methods": [{"name": "boto3.utils.LazyLoadedWaiterModel.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "bc_session", "type": null, "default": null}, {"name": "service_name", "type": null, "default": null}, {"name": "api_version", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.utils.LazyLoadedWaiterModel.get_waiter", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "waiter_name", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A lazily loaded waiter model\n\nThis does not load the service waiter model until an attempt is made\nto retrieve the waiter model for a specific waiter. This is helpful\nin docstring generation where we do not need to actually need to grab\nthe waiter-2.json until it is accessed through a `get_waiter` call\nwhen the docstring is generated/accessed.\n"]}], "exports": []}, {"name": "boto3.resources.collection", "documentation": ["Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [{"name": "boto3.resources.collection.logger", "type": null, "documentation": []}], "classes": [{"name": "boto3.resources.collection.ResourceCollection", "bases": [], "methods": [{"name": "boto3.resources.collection.ResourceCollection.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "model", "type": null, "default": null}, {"name": "parent", "type": null, "default": null}, {"name": "handler", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.collection.ResourceCollection.__repr__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.collection.ResourceCollection.__iter__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["A generator which yields resource instances after doing the\nappropriate service operation calls and handling any pagination\non your behalf.\n\nPage size, item limit, and filter parameters are applied\nif they have previously been set.\n\n    >>> bucket = s3.Bucket('boto3')\n    >>> for obj in bucket.objects.all():\n    ...     print(obj.key)\n    'key1'\n    'key2'"]}, {"name": "boto3.resources.collection.ResourceCollection._clone", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Create a clone of this collection. This is used by the methods\nbelow to provide a chainable interface that returns copies\nrather than the original. This allows things like:\n\n> ```pycon\n> >>> base = collection.filter(Param1=1)\n> >>> query1 = base.filter(Param2=2)\n> >>> query2 = base.filter(Param3=3)\n> >>> query1.params\n> {'Param1': 1, 'Param2': 2}\n> >>> query2.params\n> {'Param1': 1, 'Param3': 3}\n> ```\n\n```\nrtype\n\n\n\nreturn\n\nA clone of this resource collection\n```\n"]}, {"name": "boto3.resources.collection.ResourceCollection.pages", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["A generator which yields pages of resource instances after\ndoing the appropriate service operation calls and handling\nany pagination on your behalf. Non-paginated calls will\nreturn a single page of items.\n\nPage size, item limit, and filter parameters are applied\nif they have previously been set.\n\n> ```pycon\n> >>> bucket = s3.Bucket('boto3')\n> >>> for page in bucket.objects.pages():\n> ...     for obj in page:\n> ...         print(obj.key)\n> 'key1'\n> 'key2'\n> ```\n\n```\nrtype\n\nlist()\n\nreturn\n\nList of resource instances\n```\n"]}, {"name": "boto3.resources.collection.ResourceCollection.all", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get all items from the collection, optionally with a custom\npage size and item count limit.\n\nThis method returns an iterable generator which yields\nindividual resource instances. Example use:\n\n```\n# Iterate through items\n>>> for queue in sqs.queues.all():\n...     print(queue.url)\n'https://url1'\n'https://url2'\n\n# Convert to list\n>>> queues = list(sqs.queues.all())\n>>> len(queues)\n2\n```\n"]}, {"name": "boto3.resources.collection.ResourceCollection.filter", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Get items from the collection, passing keyword arguments along\nas parameters to the underlying service operation, which are\ntypically used to filter the results.\n\nThis method returns an iterable generator which yields\nindividual resource instances. Example use:\n\n```\n# Iterate through items\n>>> for queue in sqs.queues.filter(Param='foo'):\n...     print(queue.url)\n'https://url1'\n'https://url2'\n\n# Convert to list\n>>> queues = list(sqs.queues.filter(Param='foo'))\n>>> len(queues)\n2\n```\n\n```\nrtype\n\n```\n"]}, {"name": "boto3.resources.collection.ResourceCollection.limit", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "count", "type": null, "default": null}], "returns": null, "documentation": ["Return at most this many resources.\n\n> ```pycon\n> >>> for bucket in s3.buckets.limit(5):\n> ...     print(bucket.name)\n> 'bucket1'\n> 'bucket2'\n> 'bucket3'\n> 'bucket4'\n> 'bucket5'\n> ```\n\n```\ntype count\n\nint\n\nparam count\n\nReturn no more than this many items\n\nrtype\n\n```\n"]}, {"name": "boto3.resources.collection.ResourceCollection.page_size", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "count", "type": null, "default": null}], "returns": null, "documentation": ["Fetch at most this many resources per service request.\n\n> ```pycon\n> >>> for obj in s3.Bucket('boto3').objects.page_size(100):\n> ...     print(obj.key)\n> ```\n\n```\ntype count\n\nint\n\nparam count\n\nFetch this many items per request\n\nrtype\n\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Represents a collection of resources, which can be iterated through,\noptionally with filtering. Collections automatically handle pagination\nfor you.\n\nSee {ref}`guide_collections` for a high-level overview of collections,\nincluding when remote service requests are performed.\n\n```\ntype model\n\n\n\nparam model\n\nCollection model\n\ntype parent\n\n\n\nparam parent\n\nThe collection's parent resource\n\ntype handler\n\n\n\nparam handler\n\nThe resource response handler used to create resource\ninstances\n```\n"]}, {"name": "boto3.resources.collection.CollectionManager", "bases": [], "methods": [{"name": "boto3.resources.collection.CollectionManager.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "collection_model", "type": null, "default": null}, {"name": "parent", "type": null, "default": null}, {"name": "factory", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionManager.__repr__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionManager.iterator", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Get a resource collection iterator from this manager.\n\n```\nrtype\n\n\n\nreturn\n\nAn iterable representing the collection of resources\n```\n"]}, {"name": "boto3.resources.collection.CollectionManager.all", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Set up some methods to proxy ResourceCollection methods"]}, {"name": "boto3.resources.collection.CollectionManager.filter", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionManager.limit", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "count", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionManager.page_size", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "count", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionManager.pages", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [{"name": "boto3.resources.collection.CollectionManager._collection_cls", "type": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionManager.all.__doc__", "type": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionManager.filter.__doc__", "type": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionManager.limit.__doc__", "type": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionManager.page_size.__doc__", "type": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionManager.pages.__doc__", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": ["A collection manager provides access to resource collection instances,\nwhich can be iterated and filtered. The manager exposes some\nconvenience functions that are also found on resource collections,\nsuch as {py:meth}`~ResourceCollection.all` and\n{py:meth}`~ResourceCollection.filter`.\n\nGet all items:\n\n```\n>>> for bucket in s3.buckets.all():\n...     print(bucket.name)\n```\n\nGet only some items via filtering:\n\n```\n>>> for queue in sqs.queues.filter(QueueNamePrefix='AWS'):\n...     print(queue.url)\n```\n\nGet whole pages of items:\n\n> ```pycon\n> >>> for page in s3.Bucket('boto3').objects.pages():\n> ...     for obj in page:\n> ...         print(obj.key)\n> ```\n\nA collection manager is not iterable. You **must** call one of the\nmethods that return a {py:class}`ResourceCollection` before trying\nto iterate, slice, or convert to a list.\n\nSee the {ref}`guide_collections` guide for a high-level overview\nof collections, including when remote service requests are performed.\n\n```\ntype collection_model\n\n\n\nparam model\n\nCollection model\n\ntype parent\n\n\n\nparam parent\n\nThe collection's parent resource\n\ntype factory\n\n\n\nparam factory\n\nThe resource factory to create new resources\n\ntype service_context\n\n\n\nparam service_context\n\nContext about the AWS service\n```\n"]}, {"name": "boto3.resources.collection.CollectionFactory", "bases": [], "methods": [{"name": "boto3.resources.collection.CollectionFactory.load_from_definition", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "collection_model", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}], "returns": null, "documentation": ["Loads a collection from a model, creating a new\n{py:class}`CollectionManager` subclass\nwith the correct properties and methods, named based on the service\nand resource name, e.g. ec2.InstanceCollectionManager. It also\ncreates a new {py:class}`ResourceCollection` subclass which is used\nby the new manager class.\n\n```\ntype resource_name\n\nstring\n\nparam resource_name\n\nName of the resource to look up. For services,\nthis should match the service_name.\n\ntype service_context\n\n\n\nparam service_context\n\nContext about the AWS service\n\ntype event_emitter\n\n\n\nparam event_emitter\n\nAn event emitter\n\nrtype\n\nSubclass of \n\nreturn\n\nThe collection class.\n```\n"]}, {"name": "boto3.resources.collection.CollectionFactory._load_batch_actions", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "attrs", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "collection_model", "type": null, "default": null}, {"name": "service_model", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}], "returns": null, "documentation": ["Batch actions on the collection become methods on both\nthe collection manager and iterators."]}, {"name": "boto3.resources.collection.CollectionFactory._load_documented_collection_methods", "asynchronous": false, "params": [{"name": "factory_self", "type": null, "default": null}, {"name": "attrs", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "collection_model", "type": null, "default": null}, {"name": "service_model", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}, {"name": "base_class", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.collection.CollectionFactory._create_batch_action", "asynchronous": false, "params": [{"name": "factory_self", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "snake_cased", "type": null, "default": null}, {"name": "action_model", "type": null, "default": null}, {"name": "collection_model", "type": null, "default": null}, {"name": "service_model", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}], "returns": null, "documentation": ["Creates a new method which makes a batch operation request\nto the underlying service API."]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A factory to create new\n{py:class}`CollectionManager` and {py:class}`ResourceCollection`\nsubclasses from a {py:class}`~boto3.resources.model.Collection`\nmodel. These subclasses include methods to perform batch operations.\n"]}], "exports": []}, {"name": "boto3.resources.action", "documentation": ["Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [{"name": "boto3.resources.action.logger", "type": null, "documentation": []}], "classes": [{"name": "boto3.resources.action.ServiceAction", "bases": [], "methods": [{"name": "boto3.resources.action.ServiceAction.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "action_model", "type": null, "default": null}, {"name": "factory", "type": null, "default": "..."}, {"name": "service_context", "type": null, "default": "..."}], "returns": null, "documentation": []}, {"name": "boto3.resources.action.ServiceAction.__call__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "parent", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Perform the action's request operation after building operation\nparameters and build any defined resources from the response.\n\n```\ntype parent\n\n\n\nparam parent\n\nThe resource instance to which this action is attached.\n\nrtype\n\ndict or ServiceResource or list(ServiceResource)\n\nreturn\n\nThe response, either as a raw dict or resource instance(s).\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A class representing a callable action on a resource, for example\n`sqs.get_queue_by_name(...)` or `s3.Bucket('foo').delete()`.\nThe action may construct parameters from existing resource identifiers\nand may return either a raw response or a new resource instance.\n\n```\ntype action_model\n\n:py:class`~boto3.resources.model.Action`\n\nparam action_model\n\nThe action model.\n\ntype factory\n\nResourceFactory\n\nparam factory\n\nThe factory that created the resource class to which\nthis action is attached.\n\ntype service_context\n\n\n\nparam service_context\n\nContext about the AWS service\n```\n"]}, {"name": "boto3.resources.action.BatchAction", "bases": ["ServiceAction"], "methods": [{"name": "boto3.resources.action.BatchAction.__call__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "parent", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Perform the batch action's operation on every page of results\nfrom the collection.\n\n```\ntype parent\n\n\n\nparam parent\n\nThe collection iterator to which this action\nis attached.\n\nrtype\n\nlist(dict)\n\nreturn\n\nA list of low-level response dicts from each call.\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["An action which operates on a batch of items in a collection, typically\na single page of results from the collection's underlying service\noperation call. For example, this allows you to delete up to 999\nS3 objects in a single operation rather than calling `.delete()` on\neach one individually.\n\n```\ntype action_model\n\n:py:class`~boto3.resources.model.Action`\n\nparam action_model\n\nThe action model.\n\ntype factory\n\nResourceFactory\n\nparam factory\n\nThe factory that created the resource class to which\nthis action is attached.\n\ntype service_context\n\n\n\nparam service_context\n\nContext about the AWS service\n```\n"]}, {"name": "boto3.resources.action.WaiterAction", "bases": [], "methods": [{"name": "boto3.resources.action.WaiterAction.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "waiter_model", "type": null, "default": null}, {"name": "waiter_resource_name", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.action.WaiterAction.__call__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "parent", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Perform the wait operation after building operation\nparameters.\n\n```\ntype parent\n\n\n\nparam parent\n\nThe resource instance to which this action is attached.\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A class representing a callable waiter action on a resource, for example\n`s3.Bucket('foo').wait_until_bucket_exists()`.\nThe waiter action may construct parameters from existing resource\nidentifiers.\n\n```\ntype waiter_model\n\n:py:class`~boto3.resources.model.Waiter`\n\nparam waiter_model\n\nThe action waiter.\n\ntype waiter_resource_name\n\nstring\n\nparam waiter_resource_name\n\nThe name of the waiter action for the\nresource. It usually begins with a\nwait_until_\n```\n"]}, {"name": "boto3.resources.action.CustomModeledAction", "bases": [], "methods": [{"name": "boto3.resources.action.CustomModeledAction.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "action_name", "type": null, "default": null}, {"name": "action_model", "type": null, "default": null}, {"name": "function", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}], "returns": null, "documentation": ["---\nparam action_model: |-\n  A JSON definition of the action, as if it were\n  part of the resource model.\nparam action_name: |-\n  The name of the action to inject, e.g.\n  'delete_tags'\nparam event_emitter: The session event emitter.\nparam function: |-\n  The function to perform when the action is called.\n  The first argument should be 'self', which will be the resource\n  the function is to be called on.\ntype action_model: dict\ntype action_name: str\ntype event_emitter: '{py:class}`botocore.hooks.BaseEventHooks`'\ntype function: function\n---\n"]}, {"name": "boto3.resources.action.CustomModeledAction.inject", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "class_attributes", "type": null, "default": null}, {"name": "service_context", "type": null, "default": null}, {"name": "event_name", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A custom, modeled action to inject into a resource."]}], "exports": []}, {"name": "boto3", "documentation": ["Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.setup_default_session", "asynchronous": false, "params": [{"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Set up a default session, passing through any parameters to the session\nconstructor. There is no need to call this unless you wish to pass custom\nparameters, because a default session will be created for you."]}, {"name": "boto3.set_stream_logger", "asynchronous": false, "params": [{"name": "name", "type": null, "default": "..."}, {"name": "level", "type": null, "default": "..."}, {"name": "format_string", "type": null, "default": "..."}], "returns": null, "documentation": ["Add a stream handler for the given name and level to the logging module.\nBy default, this logs all boto3 messages to `stdout`.\n\n> ```pycon\n> >>> import boto3\n> >>> boto3.set_stream_logger('boto3.resources', logging.INFO)\n> ```\n\nFor debugging purposes a good choice is to set the stream logger to `''`\nwhich is equivalent to saying \"log everything\".\n\n:::{WARNING}\nBe aware that when logging anything from `'botocore'` the full wire\ntrace will appear in your logs. If your payloads contain sensitive data\nthis should not be used in production.\n:::\n\n```\ntype name\n\nstring\n\nparam name\n\nLog name\n\ntype level\n\nint\n\nparam level\n\nLogging level, e.g. logging.INFO\n\ntype format_string\n\nstr\n\nparam format_string\n\nLog message format\n```\n"]}, {"name": "boto3._get_default_session", "asynchronous": false, "params": [], "returns": null, "documentation": ["Get the default session, creating one if needed.\n\n```\nrtype\n\n\n\nreturn\n\nThe default session\n```\n"]}, {"name": "boto3.client", "asynchronous": false, "params": [{"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Create a low-level service client by name using the default session.\n\nSee {py:meth}`boto3.session.Session.client`.\n"]}, {"name": "boto3.resource", "asynchronous": false, "params": [{"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Create a resource service client by name using the default session.\n\nSee {py:meth}`boto3.session.Session.resource`.\n"]}], "variables": [{"name": "boto3.__author__", "type": null, "documentation": []}, {"name": "boto3.__version__", "type": null, "documentation": []}, {"name": "boto3.DEFAULT_SESSION", "type": null, "documentation": []}], "classes": [{"name": "boto3.NullHandler", "bases": ["logging.Handler"], "methods": [{"name": "boto3.NullHandler.emit", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "record", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Set up logging to ``/dev/null`` like a library is supposed to.", "https://docs.python.org/3.3/howto/logging.html#configuring-logging-for-a-library"]}], "exports": [{"name": "boto3._warn_deprecated_python", "xref": {"fqname": "boto3.compat._warn_deprecated_python", "project": null}}, {"name": "boto3.Session", "xref": {"fqname": "boto3.session.Session", "project": null}}]}, {"name": "boto3.dynamodb.table", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.dynamodb.table.register_table_methods", "asynchronous": false, "params": [{"name": "base_classes", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "variables": [{"name": "boto3.dynamodb.table.logger", "type": null, "documentation": []}], "classes": [{"name": "boto3.dynamodb.table.TableResource", "bases": [], "methods": [{"name": "boto3.dynamodb.table.TableResource.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.table.TableResource.batch_writer", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "overwrite_by_pkeys", "type": null, "default": "..."}], "returns": null, "documentation": ["Create a batch writer object.\n\nThis method creates a context manager for writing\nobjects to Amazon DynamoDB in batch.\n\nThe batch writer will automatically handle buffering and sending items\nin batches. In addition, the batch writer will also automatically\nhandle any unprocessed items and resend them as needed. All you need\nto do is call `put_item` for any items you want to add, and\n`delete_item` for any items you want to delete.\n\nExample usage:\n\n```\nwith table.batch_writer() as batch:\n    for _ in range(1000000):\n        batch.put_item(Item={'HashKey': '...',\n                             'Otherstuff': '...'})\n    # You can also delete_items in a batch.\n    batch.delete_item(Key={'HashKey': 'SomeHashKey'})\n```\n\n```\ntype overwrite_by_pkeys\n\nlist(string)\n\nparam overwrite_by_pkeys\n\nDe-duplicate request items in buffer\nif match new request item on specified primary keys. i.e\n[\"partition_key1\", \"sort_key2\", \"sort_key3\"]\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["This class can be used to add any additional methods we want", "onto a table resource.  Ideally to avoid creating a new", "base class for every method we can just update this", "class instead.  Just be sure to move the bulk of the", "actual method implementation to another class."]}, {"name": "boto3.dynamodb.table.BatchWriter", "bases": [], "methods": [{"name": "boto3.dynamodb.table.BatchWriter.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "table_name", "type": null, "default": null}, {"name": "client", "type": null, "default": null}, {"name": "flush_amount", "type": null, "default": "..."}, {"name": "overwrite_by_pkeys", "type": null, "default": "..."}], "returns": null, "documentation": ["---\nparam client: |-\n  A botocore client. Note this client\n  **must** have the dynamodb customizations applied\n  to it for transforming AttributeValues into the\n  wire protocol. What this means in practice is that\n  you need to use a client that comes from a DynamoDB\n  resource if you're going to instantiate this class\n  directly, i.e\n  `boto3.resource('dynamodb').Table('foo').meta.client`.\nparam flush_amount: |-\n  The number of items to keep in\n  a local buffer before sending a batch_write_item\n  request to DynamoDB.\nparam overwrite_by_pkeys: |-\n  De-duplicate request items in buffer\n  if match new request item on specified primary keys. i.e\n  `[\"partition_key1\", \"sort_key2\", \"sort_key3\"]`\nparam table_name: |-\n  The name of the table. The class handles\n  batch writes to a single table.\ntype client: '`botocore.client.Client`'\ntype flush_amount: int\ntype overwrite_by_pkeys: list(string)\ntype table_name: str\n---\n"]}, {"name": "boto3.dynamodb.table.BatchWriter.put_item", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Item", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.table.BatchWriter.delete_item", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.table.BatchWriter._add_request_and_process", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "request", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.table.BatchWriter._remove_dup_pkeys_request_if_any", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "request", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.table.BatchWriter._extract_pkey_values", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "request", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.table.BatchWriter._flush_if_needed", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.table.BatchWriter._flush", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.table.BatchWriter.__enter__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.table.BatchWriter.__exit__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "exc_type", "type": null, "default": null}, {"name": "exc_value", "type": null, "default": null}, {"name": "tb", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Automatically handle batch writes to DynamoDB for a single table."]}], "exports": []}, {"name": "boto3.dynamodb", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [], "classes": [], "exports": []}, {"name": "boto3.resources.model", "documentation": ["The models defined in this file represent the resource JSON description\nformat and provide a layer of abstraction from the raw JSON. The advantages\nof this are:\n\n- Pythonic interface (e.g. `action.request.operation`)\n- Consumers need not change for minor JSON changes (e.g. renamed field)\n\nThese models are used both by the resource factory to generate resource\nclasses as well as by the documentation generator.\n", "Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [{"name": "boto3.resources.model.logger", "type": null, "documentation": []}], "classes": [{"name": "boto3.resources.model.Identifier", "bases": [], "methods": [{"name": "boto3.resources.model.Identifier.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "name", "type": null, "default": null}, {"name": "member_name", "type": null, "default": "..."}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A resource identifier, given by its name.\n\n```\ntype name\n\nstring\n\nparam name\n\nThe name of the identifier\n```\n"]}, {"name": "boto3.resources.model.Action", "bases": [], "methods": [{"name": "boto3.resources.model.Action.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "name", "type": null, "default": null}, {"name": "definition", "type": null, "default": null}, {"name": "resource_defs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A service operation action.\n\n```\ntype name\n\nstring\n\nparam name\n\nThe name of the action\n\ntype definition\n\ndict\n\nparam definition\n\nThe JSON definition\n\ntype resource_defs\n\ndict\n\nparam resource_defs\n\nAll resources defined in the service\n```\n"]}, {"name": "boto3.resources.model.DefinitionWithParams", "bases": [], "methods": [{"name": "boto3.resources.model.DefinitionWithParams.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "definition", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.model.DefinitionWithParams.params", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of auto-filled parameters for this request.\n\n```\ntype\n\nlist()\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["An item which has parameters exposed via the `params` property.\nA request has an operation and parameters, while a waiter has\na name, a low-level waiter name and parameters.\n\n```\ntype definition\n\ndict\n\nparam definition\n\nThe JSON definition\n```\n"]}, {"name": "boto3.resources.model.Parameter", "bases": [], "methods": [{"name": "boto3.resources.model.Parameter.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "target", "type": null, "default": null}, {"name": "source", "type": null, "default": null}, {"name": "name", "type": null, "default": "..."}, {"name": "path", "type": null, "default": "..."}, {"name": "value", "type": null, "default": "..."}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["An auto-filled parameter which has a source and target. For example,\nthe `QueueUrl` may be auto-filled from a resource's `url` identifier\nwhen making calls to `queue.receive_messages`.\n\n```\ntype target\n\nstring\n\nparam target\n\nThe destination parameter name, e.g. QueueUrl\n\ntype source_type\n\nstring\n\nparam source_type\n\nWhere the source is defined.\n\ntype source\n\nstring\n\nparam source\n\nThe source name, e.g. Url\n```\n"]}, {"name": "boto3.resources.model.Request", "bases": ["DefinitionWithParams"], "methods": [{"name": "boto3.resources.model.Request.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "definition", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A service operation action request.\n\n```\ntype definition\n\ndict\n\nparam definition\n\nThe JSON definition\n```\n"]}, {"name": "boto3.resources.model.Waiter", "bases": ["DefinitionWithParams"], "methods": [{"name": "boto3.resources.model.Waiter.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "name", "type": null, "default": null}, {"name": "definition", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [{"name": "boto3.resources.model.Waiter.PREFIX", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": ["An event waiter specification.\n\n```\ntype name\n\nstring\n\nparam name\n\nName of the waiter\n\ntype definition\n\ndict\n\nparam definition\n\nThe JSON definition\n```\n"]}, {"name": "boto3.resources.model.ResponseResource", "bases": [], "methods": [{"name": "boto3.resources.model.ResponseResource.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "definition", "type": null, "default": null}, {"name": "resource_defs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.model.ResponseResource.identifiers", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["A list of resource identifiers.\n\n```\ntype\n\nlist()\n```\n"]}, {"name": "boto3.resources.model.ResponseResource.model", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get the resource model for the response resource.\n\n```\ntype\n\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A resource response to create after performing an action.\n\n```\ntype definition\n\ndict\n\nparam definition\n\nThe JSON definition\n\ntype resource_defs\n\ndict\n\nparam resource_defs\n\nAll resources defined in the service\n```\n"]}, {"name": "boto3.resources.model.Collection", "bases": ["Action"], "methods": [{"name": "boto3.resources.model.Collection.batch_actions", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of batch actions supported by the resource type\ncontained in this action. This is a shortcut for accessing\nthe same information through the resource model.\n\n```\nrtype\n\nlist()\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A group of resources. See {py:class}`Action`.\n\n```\ntype name\n\nstring\n\nparam name\n\nThe name of the collection\n\ntype definition\n\ndict\n\nparam definition\n\nThe JSON definition\n\ntype resource_defs\n\ndict\n\nparam resource_defs\n\nAll resources defined in the service\n```\n"]}, {"name": "boto3.resources.model.ResourceModel", "bases": [], "methods": [{"name": "boto3.resources.model.ResourceModel.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "name", "type": null, "default": null}, {"name": "definition", "type": null, "default": null}, {"name": "resource_defs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.resources.model.ResourceModel.load_rename_map", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "shape", "type": null, "default": "..."}], "returns": null, "documentation": ["Load a name translation map given a shape. This will set\nup renamed values for any collisions, e.g. if the shape,\nan action, and a subresource all are all named `foo`\nthen the resource will have an action `foo`, a subresource\nnamed `Foo` and a property named `foo_attribute`.\nThis is the order of precedence, from most important to\nleast important:\n\n- Load action (resource.load)\n- Identifiers\n- Actions\n- Subresources\n- References\n- Collections\n- Waiters\n- Attributes (shape members)\n\nBatch actions are only exposed on collections, so do not\nget modified here. Subresources use upper camel casing, so\nare unlikely to collide with anything but other subresources.\n\nCreates a structure like this:\n\n```\nrenames = {\n    ('action', 'id'): 'id_action',\n    ('collection', 'id'): 'id_collection',\n    ('attribute', 'id'): 'id_attribute'\n}\n\n# Get the final name for an action named 'id'\nname = renames.get(('action', 'id'), 'id')\n```\n\n```\ntype shape\n\nbotocore.model.Shape\n\nparam shape\n\nThe underlying shape for this resource.\n```\n"]}, {"name": "boto3.resources.model.ResourceModel._load_name_with_category", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "names", "type": null, "default": null}, {"name": "name", "type": null, "default": null}, {"name": "category", "type": null, "default": null}, {"name": "snake_case", "type": null, "default": "..."}], "returns": null, "documentation": ["Load a name with a given category, possibly renaming it\nif that name is already in use. The name will be stored\nin `names` and possibly be set up in `self._renamed`.\n\n```\ntype names\n\nset\n\nparam names\n\nExisting names (Python attributes, properties, or\nmethods) on the resource.\n\ntype name\n\nstring\n\nparam name\n\nThe original name of the value.\n\ntype category\n\nstring\n\nparam category\n\nThe value type, such as 'identifier' or 'action'\n\ntype snake_case\n\nbool\n\nparam snake_case\n\nTrue (default) if the name should be snake cased.\n```\n"]}, {"name": "boto3.resources.model.ResourceModel._get_name", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "category", "type": null, "default": null}, {"name": "name", "type": null, "default": null}, {"name": "snake_case", "type": null, "default": "..."}], "returns": null, "documentation": ["Get a possibly renamed value given a category and name. This\nuses the rename map set up in `load_rename_map`, so that\nmethod must be called once first.\n\n```\ntype category\n\nstring\n\nparam category\n\nThe value type, such as 'identifier' or 'action'\n\ntype name\n\nstring\n\nparam name\n\nThe original name of the value\n\ntype snake_case\n\nbool\n\nparam snake_case\n\nTrue (default) if the name should be snake cased.\n\nrtype\n\nstring\n\nreturn\n\nEither the renamed value if it is set, otherwise the\noriginal name.\n```\n"]}, {"name": "boto3.resources.model.ResourceModel.get_attributes", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "shape", "type": null, "default": null}], "returns": null, "documentation": ["Get a dictionary of attribute names to original name and shape\nmodels that represent the attributes of this resource. Looks\nlike the following:\n\n> {\n>\n> : 'some_name': ('SomeName', \\<Shape...>)\n>\n> }\n\n```\ntype shape\n\nbotocore.model.Shape\n\nparam shape\n\nThe underlying shape for this resource.\n\nrtype\n\ndict\n\nreturn\n\nMapping of resource attributes.\n```\n"]}, {"name": "boto3.resources.model.ResourceModel.identifiers", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of resource identifiers.\n\n```\ntype\n\nlist()\n```\n"]}, {"name": "boto3.resources.model.ResourceModel.load", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get the load action for this resource, if it is defined.\n\n```\ntype\n\n or None\n```\n"]}, {"name": "boto3.resources.model.ResourceModel.actions", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of actions for this resource.\n\n```\ntype\n\nlist()\n```\n"]}, {"name": "boto3.resources.model.ResourceModel.batch_actions", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of batch actions for this resource.\n\n```\ntype\n\nlist()\n```\n"]}, {"name": "boto3.resources.model.ResourceModel._get_has_definition", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a `has` relationship definition from a model, where the\nservice resource model is treated special in that it contains\na relationship to every resource defined for the service. This\nallows things like `s3.Object('bucket-name', 'key')` to\nwork even though the JSON doesn't define it explicitly.\n\n```\nrtype\n\ndict\n\nreturn\n\nMapping of names to subresource and reference\ndefinitions.\n```\n"]}, {"name": "boto3.resources.model.ResourceModel._get_related_resources", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "subresources", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of sub-resources or references.\n\n```\ntype subresources\n\nbool\n\nparam subresources\n\nTrue to get sub-resources, False to\nget references.\n\nrtype\n\nlist()\n```\n"]}, {"name": "boto3.resources.model.ResourceModel.subresources", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of sub-resources.\n\n```\ntype\n\nlist()\n```\n"]}, {"name": "boto3.resources.model.ResourceModel.references", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of reference resources.\n\n```\ntype\n\nlist()\n```\n"]}, {"name": "boto3.resources.model.ResourceModel.collections", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of collections for this resource.\n\n```\ntype\n\nlist()\n```\n"]}, {"name": "boto3.resources.model.ResourceModel.waiters", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of waiters for this resource.\n\n```\ntype\n\nlist()\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A model representing a resource, defined via a JSON description\nformat. A resource has identifiers, attributes, actions,\nsub-resources, references and collections. For more information\non resources, see {ref}`guide_resources`.\n\n```\ntype name\n\nstring\n\nparam name\n\nThe name of this resource, e.g. sqs or Queue\n\ntype definition\n\ndict\n\nparam definition\n\nThe JSON definition\n\ntype resource_defs\n\ndict\n\nparam resource_defs\n\nAll resources defined in the service\n```\n"]}], "exports": []}, {"name": "boto3.dynamodb.transform", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.dynamodb.transform.register_high_level_interface", "asynchronous": false, "params": [{"name": "base_classes", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.transform.copy_dynamodb_params", "asynchronous": false, "params": [{"name": "params", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "variables": [], "classes": [{"name": "boto3.dynamodb.transform._ForgetfulDict", "bases": ["dict"], "methods": [{"name": "boto3.dynamodb.transform._ForgetfulDict.__setitem__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "key", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A dictionary that discards any items set on it. For use as `memo` in\n`copy.deepcopy()` when every instance of a repeated object in the deepcopied\ndata structure should result in a separate copy."]}, {"name": "boto3.dynamodb.transform.DynamoDBHighLevelResource", "bases": [], "methods": [{"name": "boto3.dynamodb.transform.DynamoDBHighLevelResource.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.transform.TransformationInjector", "bases": [], "methods": [{"name": "boto3.dynamodb.transform.TransformationInjector.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "transformer", "type": null, "default": "..."}, {"name": "condition_builder", "type": null, "default": "..."}, {"name": "serializer", "type": null, "default": "..."}, {"name": "deserializer", "type": null, "default": "..."}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.transform.TransformationInjector.inject_condition_expressions", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "params", "type": null, "default": null}, {"name": "model", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Injects the condition expression transformation into the parameters\n\nThis injection includes transformations for ConditionExpression shapes\nand KeyExpression shapes. It also handles any placeholder names and\nvalues that are generated when transforming the condition expressions."]}, {"name": "boto3.dynamodb.transform.TransformationInjector.inject_attribute_value_input", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "params", "type": null, "default": null}, {"name": "model", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Injects DynamoDB serialization into parameter input"]}, {"name": "boto3.dynamodb.transform.TransformationInjector.inject_attribute_value_output", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "parsed", "type": null, "default": null}, {"name": "model", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Injects DynamoDB deserialization into responses"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Injects the transformations into the user provided parameters."]}, {"name": "boto3.dynamodb.transform.ConditionExpressionTransformation", "bases": [], "methods": [{"name": "boto3.dynamodb.transform.ConditionExpressionTransformation.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "condition_builder", "type": null, "default": null}, {"name": "placeholder_names", "type": null, "default": null}, {"name": "placeholder_values", "type": null, "default": null}, {"name": "is_key_condition", "type": null, "default": "..."}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.transform.ConditionExpressionTransformation.__call__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Provides a transformation for condition expressions\n\nThe `ParameterTransformer` class can call this class directly\nto transform the condition expressions in the parameters provided.\n"]}, {"name": "boto3.dynamodb.transform.ParameterTransformer", "bases": [], "methods": [{"name": "boto3.dynamodb.transform.ParameterTransformer.transform", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "params", "type": null, "default": null}, {"name": "model", "type": null, "default": null}, {"name": "transformation", "type": null, "default": null}, {"name": "target_shape", "type": null, "default": null}], "returns": null, "documentation": ["Transforms the dynamodb input to or output from botocore\n\nIt applies a specified transformation whenever a specific shape name\nis encountered while traversing the parameters in the dictionary.\n\n```\nparam params\n\nThe parameters structure to transform.\n\nparam model\n\nThe operation model.\n\nparam transformation\n\nThe function to apply the parameter\n\nparam target_shape\n\nThe name of the shape to apply the\ntransformation to\n```\n"]}, {"name": "boto3.dynamodb.transform.ParameterTransformer._transform_parameters", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "model", "type": null, "default": null}, {"name": "params", "type": null, "default": null}, {"name": "transformation", "type": null, "default": null}, {"name": "target_shape", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.transform.ParameterTransformer._transform_structure", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "model", "type": null, "default": null}, {"name": "params", "type": null, "default": null}, {"name": "transformation", "type": null, "default": null}, {"name": "target_shape", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.transform.ParameterTransformer._transform_map", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "model", "type": null, "default": null}, {"name": "params", "type": null, "default": null}, {"name": "transformation", "type": null, "default": null}, {"name": "target_shape", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.transform.ParameterTransformer._transform_list", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "model", "type": null, "default": null}, {"name": "params", "type": null, "default": null}, {"name": "transformation", "type": null, "default": null}, {"name": "target_shape", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Transforms the input to and output from botocore based on shape"]}], "exports": []}, {"name": "boto3.ec2.deletetags", "documentation": ["Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.ec2.deletetags.inject_delete_tags", "asynchronous": false, "params": [{"name": "event_emitter", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.ec2.deletetags.delete_tags", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "variables": [], "classes": [], "exports": []}, {"name": "boto3.ec2", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [], "classes": [], "exports": []}, {"name": "boto3.session", "documentation": ["Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [], "classes": [{"name": "boto3.session.Session", "bases": [], "methods": [{"name": "boto3.session.Session.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "aws_access_key_id", "type": null, "default": "..."}, {"name": "aws_secret_access_key", "type": null, "default": "..."}, {"name": "aws_session_token", "type": null, "default": "..."}, {"name": "region_name", "type": null, "default": "..."}, {"name": "botocore_session", "type": null, "default": "..."}, {"name": "profile_name", "type": null, "default": "..."}, {"name": "aws_account_id", "type": null, "default": "..."}], "returns": null, "documentation": []}, {"name": "boto3.session.Session.__repr__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.session.Session.profile_name", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["The **read-only** profile name."]}, {"name": "boto3.session.Session.region_name", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["The **read-only** region name."]}, {"name": "boto3.session.Session.events", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["The event emitter for a session"]}, {"name": "boto3.session.Session.available_profiles", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["The profiles available to the session credentials"]}, {"name": "boto3.session.Session._setup_loader", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Setup loader paths so that we can load resources."]}, {"name": "boto3.session.Session.get_available_services", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of available services that can be loaded as low-level\nclients via {py:meth}`Session.client`.\n\n```\nrtype\n\nlist\n\nreturn\n\nList of service names\n```\n"]}, {"name": "boto3.session.Session.get_available_resources", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Get a list of available services that can be loaded as resource\nclients via {py:meth}`Session.resource`.\n\n```\nrtype\n\nlist\n\nreturn\n\nList of service names\n```\n"]}, {"name": "boto3.session.Session.get_available_partitions", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Lists the available partitions\n\n```\nrtype\n\nlist\n\nreturn\n\nReturns a list of partition names (e.g., [\"aws\", \"aws-cn\"])\n```\n"]}, {"name": "boto3.session.Session.get_available_regions", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "service_name", "type": null, "default": null}, {"name": "partition_name", "type": null, "default": "..."}, {"name": "allow_non_regional", "type": null, "default": "..."}], "returns": null, "documentation": ["Lists the region and endpoint names of a particular partition.\n\nThe list of regions returned by this method are regions that are\nexplicitly known by the client to exist and is not comprehensive. A\nregion not returned in this list may still be available for the\nprovided service.\n\n```\ntype service_name\n\nstring\n\nparam service_name\n\nName of a service to list endpoint for (e.g., s3).\n\ntype partition_name\n\nstring\n\nparam partition_name\n\nName of the partition to limit endpoints to.\n(e.g., aws for the public AWS endpoints, aws-cn for AWS China\nendpoints, aws-us-gov for AWS GovCloud (US) Endpoints, etc.)\n\ntype allow_non_regional\n\nbool\n\nparam allow_non_regional\n\nSet to True to include endpoints that are\nnot regional endpoints (e.g., s3-external-1,\nfips-us-gov-west-1, etc).\n\nreturn\n\nReturns a list of endpoint names (e.g., [\"us-east-1\"]).\n```\n"]}, {"name": "boto3.session.Session.get_credentials", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Return the {class}`botocore.credentials.Credentials` object\nassociated with this session. If the credentials have not\nyet been loaded, this will attempt to load them. If they\nhave already been loaded, this will return the cached\ncredentials.\n"]}, {"name": "boto3.session.Session.get_partition_for_region", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "region_name", "type": null, "default": null}], "returns": null, "documentation": ["Lists the partition name of a particular region.\n\n```\ntype region_name\n\nstring\n\nparam region_name\n\nName of the region to list partition for (e.g.,\nus-east-1).\n\nrtype\n\nstring\n\nreturn\n\nReturns the respective partition name (e.g., aws).\n```\n"]}, {"name": "boto3.session.Session.client", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "service_name", "type": null, "default": null}, {"name": "region_name", "type": null, "default": "..."}, {"name": "api_version", "type": null, "default": "..."}, {"name": "use_ssl", "type": null, "default": "..."}, {"name": "verify", "type": null, "default": "..."}, {"name": "endpoint_url", "type": null, "default": "..."}, {"name": "aws_access_key_id", "type": null, "default": "..."}, {"name": "aws_secret_access_key", "type": null, "default": "..."}, {"name": "aws_session_token", "type": null, "default": "..."}, {"name": "config", "type": null, "default": "..."}, {"name": "aws_account_id", "type": null, "default": "..."}], "returns": null, "documentation": ["Create a low-level service client by name.\n\n```\ntype service_name\n\nstring\n\nparam service_name\n\nThe name of a service, e.g. 's3' or 'ec2'. You\ncan get a list of available services via\n.\n\ntype region_name\n\nstring\n\nparam region_name\n\nThe name of the region associated with the client.\nA client is associated with a single region.\n\ntype api_version\n\nstring\n\nparam api_version\n\nThe API version to use.  By default, botocore will\nuse the latest API version when creating a client.  You only need\nto specify this parameter if you want to use a previous API version\nof the client.\n\ntype use_ssl\n\nboolean\n\nparam use_ssl\n\nWhether or not to use SSL.  By default, SSL is used.\nNote that not all services support non-ssl connections.\n\ntype verify\n\nboolean/string\n\nparam verify\n\nWhether or not to verify SSL certificates.  By default\nSSL certificates are verified.  You can provide the following\nvalues:\n\nFalse - do not validate SSL certificates.  SSL will still be\nused (unless use_ssl is False), but SSL certificates\nwill not be verified.\n\npath/to/cert/bundle.pem - A filename of the CA cert bundle to\nuses.  You can specify this argument if you want to use a\ndifferent CA cert bundle than the one used by botocore.\n\ntype endpoint_url\n\nstring\n\nparam endpoint_url\n\nThe complete URL to use for the constructed\nclient. Normally, botocore will automatically construct the\nappropriate URL to use when communicating with a service.  You\ncan specify a complete URL (including the \"http/https\" scheme)\nto override this behavior.  If this value is provided,\nthen use_ssl is ignored.\n\ntype aws_access_key_id\n\nstring\n\nparam aws_access_key_id\n\nThe access key to use when creating\nthe client.  This is entirely optional, and if not provided,\nthe credentials configured for the session will automatically\nbe used.  You only need to provide this argument if you want\nto override the credentials used for this specific client.\n\ntype aws_secret_access_key\n\nstring\n\nparam aws_secret_access_key\n\nThe secret key to use when creating\nthe client.  Same semantics as aws_access_key_id above.\n\ntype aws_session_token\n\nstring\n\nparam aws_session_token\n\nThe session token to use when creating\nthe client.  Same semantics as aws_access_key_id above.\n\ntype config\n\nbotocore.client.Config\n\nparam config\n\nAdvanced client configuration options. If region_name\nis specified in the client config, its value will take precedence\nover environment variables and configuration values, but not over\na region_name value passed explicitly to the method. See\nbotocore config documentation\nfor more details.\n\ntype aws_account_id\n\nstring\n\nparam aws_account_id\n\nThe account id to use when creating\nthe client.  Same semantics as aws_access_key_id above.\n\nreturn\n\nService client instance\n```\n"]}, {"name": "boto3.session.Session.resource", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "service_name", "type": null, "default": null}, {"name": "region_name", "type": null, "default": "..."}, {"name": "api_version", "type": null, "default": "..."}, {"name": "use_ssl", "type": null, "default": "..."}, {"name": "verify", "type": null, "default": "..."}, {"name": "endpoint_url", "type": null, "default": "..."}, {"name": "aws_access_key_id", "type": null, "default": "..."}, {"name": "aws_secret_access_key", "type": null, "default": "..."}, {"name": "aws_session_token", "type": null, "default": "..."}, {"name": "config", "type": null, "default": "..."}], "returns": null, "documentation": ["Create a resource service client by name.\n\n```\ntype service_name\n\nstring\n\nparam service_name\n\nThe name of a service, e.g. 's3' or 'ec2'. You\ncan get a list of available services via\n.\n\ntype region_name\n\nstring\n\nparam region_name\n\nThe name of the region associated with the client.\nA client is associated with a single region.\n\ntype api_version\n\nstring\n\nparam api_version\n\nThe API version to use.  By default, botocore will\nuse the latest API version when creating a client.  You only need\nto specify this parameter if you want to use a previous API version\nof the client.\n\ntype use_ssl\n\nboolean\n\nparam use_ssl\n\nWhether or not to use SSL.  By default, SSL is used.\nNote that not all services support non-ssl connections.\n\ntype verify\n\nboolean/string\n\nparam verify\n\nWhether or not to verify SSL certificates.  By default\nSSL certificates are verified.  You can provide the following\nvalues:\n\nFalse - do not validate SSL certificates.  SSL will still be\nused (unless use_ssl is False), but SSL certificates\nwill not be verified.\n\npath/to/cert/bundle.pem - A filename of the CA cert bundle to\nuses.  You can specify this argument if you want to use a\ndifferent CA cert bundle than the one used by botocore.\n\ntype endpoint_url\n\nstring\n\nparam endpoint_url\n\nThe complete URL to use for the constructed\nclient. Normally, botocore will automatically construct the\nappropriate URL to use when communicating with a service.  You\ncan specify a complete URL (including the \"http/https\" scheme)\nto override this behavior.  If this value is provided,\nthen use_ssl is ignored.\n\ntype aws_access_key_id\n\nstring\n\nparam aws_access_key_id\n\nThe access key to use when creating\nthe client.  This is entirely optional, and if not provided,\nthe credentials configured for the session will automatically\nbe used.  You only need to provide this argument if you want\nto override the credentials used for this specific client.\n\ntype aws_secret_access_key\n\nstring\n\nparam aws_secret_access_key\n\nThe secret key to use when creating\nthe client.  Same semantics as aws_access_key_id above.\n\ntype aws_session_token\n\nstring\n\nparam aws_session_token\n\nThe session token to use when creating\nthe client.  Same semantics as aws_access_key_id above.\n\ntype config\n\nbotocore.client.Config\n\nparam config\n\nAdvanced client configuration options. If region_name\nis specified in the client config, its value will take precedence\nover environment variables and configuration values, but not over\na region_name value passed explicitly to the method.  If\nuser_agent_extra is specified in the client config, it overrides\nthe default user_agent_extra provided by the resource API. See\nbotocore config documentation\nfor more details.\n\nreturn\n\nSubclass of \n```\n"]}, {"name": "boto3.session.Session._register_default_handlers", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.session.Session._account_id_set_without_credentials", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "account_id", "type": null, "default": null}, {"name": "access_key", "type": null, "default": null}, {"name": "secret_key", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A session stores configuration state and allows you to create service\nclients and resources.\n\n```\ntype aws_access_key_id\n\nstring\n\nparam aws_access_key_id\n\nAWS access key ID\n\ntype aws_secret_access_key\n\nstring\n\nparam aws_secret_access_key\n\nAWS secret access key\n\ntype aws_session_token\n\nstring\n\nparam aws_session_token\n\nAWS temporary session token\n\ntype region_name\n\nstring\n\nparam region_name\n\nDefault region when creating new connections\n\ntype botocore_session\n\nbotocore.session.Session\n\nparam botocore_session\n\nUse this Botocore session instead of creating\na new default one.\n\ntype profile_name\n\nstring\n\nparam profile_name\n\nThe name of a profile to use. If not given, then\nthe default profile is used.\n\ntype aws_account_id\n\nstring\n\nparam aws_account_id\n\nAWS account ID\n```\n"]}], "exports": []}, {"name": "boto3.ec2.createtags", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.ec2.createtags.inject_create_tags", "asynchronous": false, "params": [{"name": "event_name", "type": null, "default": null}, {"name": "class_attributes", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["This injects a custom create_tags method onto the ec2 service resource\n\nThis is needed because the resource model is not able to express\ncreating multiple tag resources based on the fact you can apply a set\nof tags to multiple ec2 resources."]}, {"name": "boto3.ec2.createtags.create_tags", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "variables": [], "classes": [], "exports": []}, {"name": "boto3.s3.constants", "documentation": ["Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License.", "TransferConfig preferred_transfer_client settings"], "functions": [], "variables": [{"name": "boto3.s3.constants.CLASSIC_TRANSFER_CLIENT", "type": null, "documentation": []}, {"name": "boto3.s3.constants.AUTO_RESOLVE_TRANSFER_CLIENT", "type": null, "documentation": []}], "classes": [], "exports": []}, {"name": "boto3.dynamodb.types", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [{"name": "boto3.dynamodb.types.STRING", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.NUMBER", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.BINARY", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.STRING_SET", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.NUMBER_SET", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.BINARY_SET", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.NULL", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.BOOLEAN", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.MAP", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.LIST", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.DYNAMODB_CONTEXT", "type": null, "documentation": []}, {"name": "boto3.dynamodb.types.BINARY_TYPES", "type": null, "documentation": []}], "classes": [{"name": "boto3.dynamodb.types.Binary", "bases": [], "methods": [{"name": "boto3.dynamodb.types.Binary.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.Binary.__eq__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.Binary.__ne__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.Binary.__repr__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.Binary.__str__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.Binary.__bytes__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.Binary.__hash__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A class for representing Binary in dynamodb\n\nEspecially for Python 2, use this class to explicitly specify\nbinary data for item in DynamoDB. It is essentially a wrapper around\nbinary. Unicode and Python 3 string types are not allowed."]}, {"name": "boto3.dynamodb.types.TypeSerializer", "bases": [], "methods": [{"name": "boto3.dynamodb.types.TypeSerializer.serialize", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["The method to serialize the Python data types.\n\n```\nparam value\n\nA python value to be serialized to DynamoDB. Here are\nthe various conversions:\n\nPython                                  DynamoDB\n------                                  --------\nNone                                    {'NULL': True}\nTrue/False                              {'BOOL': True/False}\nint/Decimal                             {'N': str(value)}\nstring                                  {'S': string}\nBinary/bytearray/bytes (py3 only)       {'B': bytes}\nset([int/Decimal])                      {'NS': [str(value)]}\nset([string])                           {'SS': [string])\nset([Binary/bytearray/bytes])           {'BS': [bytes]}\nlist                                    {'L': list}\ndict                                    {'M': dict}\n\nFor types that involve numbers, it is recommended that Decimal\nobjects are used to be able to round-trip the Python type.\nFor types that involve binary, it is recommended that Binary\nobjects are used to be able to round-trip the Python type.\n\nrtype\n\ndict\n\nreturns\n\nA dictionary that represents a dynamoDB data type. These\ndictionaries can be directly passed to botocore methods.\n```\n"]}, {"name": "boto3.dynamodb.types.TypeSerializer._get_dynamodb_type", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._is_null", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._is_boolean", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._is_number", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._is_string", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._is_binary", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._is_set", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._is_type_set", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}, {"name": "type_validator", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._is_map", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._is_listlike", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._serialize_null", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._serialize_bool", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._serialize_n", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._serialize_s", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._serialize_b", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._serialize_ss", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._serialize_ns", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._serialize_bs", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._serialize_l", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeSerializer._serialize_m", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["This class serializes Python data types to DynamoDB types."]}, {"name": "boto3.dynamodb.types.TypeDeserializer", "bases": [], "methods": [{"name": "boto3.dynamodb.types.TypeDeserializer.deserialize", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["The method to deserialize the DynamoDB data types.\n\n```\nparam value\n\nA DynamoDB value to be deserialized to a pythonic value.\nHere are the various conversions:\n\nDynamoDB                                Python\n--------                                ------\n{'NULL': True}                          None\n{'BOOL': True/False}                    True/False\n{'N': str(value)}                       Decimal(str(value))\n{'S': string}                           string\n{'B': bytes}                            Binary(bytes)\n{'NS': [str(value)]}                    set([Decimal(str(value))])\n{'SS': [string]}                        set([string])\n{'BS': [bytes]}                         set([bytes])\n{'L': list}                             list\n{'M': dict}                             dict\n\nreturns\n\nThe pythonic value of the DynamoDB type.\n```\n"]}, {"name": "boto3.dynamodb.types.TypeDeserializer._deserialize_null", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeDeserializer._deserialize_bool", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeDeserializer._deserialize_n", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeDeserializer._deserialize_s", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeDeserializer._deserialize_b", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeDeserializer._deserialize_ns", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeDeserializer._deserialize_ss", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeDeserializer._deserialize_bs", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeDeserializer._deserialize_l", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.types.TypeDeserializer._deserialize_m", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["This class deserializes DynamoDB types to Python types."]}], "exports": []}, {"name": "boto3.s3", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [], "classes": [], "exports": []}, {"name": "boto3.compat", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.compat.rename_file", "asynchronous": false, "params": [{"name": "current_filename", "type": null, "default": null}, {"name": "new_filename", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.compat.filter_python_deprecation_warnings", "asynchronous": false, "params": [], "returns": null, "documentation": ["Invoking this filter acknowledges your runtime will soon be deprecated\nat which time you will stop receiving all updates to your client."]}, {"name": "boto3.compat._warn_deprecated_python", "asynchronous": false, "params": [], "returns": null, "documentation": ["Use this template for future deprecation campaigns as needed."]}], "variables": [{"name": "boto3.compat.SOCKET_ERROR", "type": null, "documentation": []}, {"name": "boto3.compat.rename_file", "type": null, "documentation": []}], "classes": [], "exports": []}, {"name": "boto3.docs.attr", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.docs.attr.document_attribute", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "service_name", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "attr_name", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}, {"name": "attr_model", "type": null, "default": null}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": []}, {"name": "boto3.docs.attr.document_identifier", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "identifier_model", "type": null, "default": null}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": []}, {"name": "boto3.docs.attr.document_reference", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "reference_model", "type": null, "default": null}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": []}], "variables": [], "classes": [{"name": "boto3.docs.attr.ResourceShapeDocumenter", "bases": ["ResponseParamsDocumenter"], "methods": [], "class_variables": [{"name": "boto3.docs.attr.ResourceShapeDocumenter.EVENT_NAME", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}, {"name": "boto3.dynamodb.conditions", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [{"name": "boto3.dynamodb.conditions.ATTR_NAME_REGEX", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.BuiltConditionExpression", "type": null, "documentation": []}], "classes": [{"name": "boto3.dynamodb.conditions.ConditionBase", "bases": [], "methods": [{"name": "boto3.dynamodb.conditions.ConditionBase.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*values", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionBase.__and__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionBase.__or__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionBase.__invert__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionBase.get_expression", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionBase.__eq__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionBase.__ne__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [{"name": "boto3.dynamodb.conditions.ConditionBase.expression_format", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionBase.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionBase.has_grouped_values", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeBase", "bases": [], "methods": [{"name": "boto3.dynamodb.conditions.AttributeBase.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "name", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeBase.__and__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeBase.__or__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeBase.__invert__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeBase.eq", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute is equal to the value.\n\n```\nparam value\n\nThe value that the attribute is equal to.\n```\n"]}, {"name": "boto3.dynamodb.conditions.AttributeBase.lt", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute is less than the value.\n\n```\nparam value\n\nThe value that the attribute is less than.\n```\n"]}, {"name": "boto3.dynamodb.conditions.AttributeBase.lte", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute is less than or equal to the\n\n: value.\n\n```\nparam value\n\nThe value that the attribute is less than or equal to.\n```\n"]}, {"name": "boto3.dynamodb.conditions.AttributeBase.gt", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute is greater than the value.\n\n```\nparam value\n\nThe value that the attribute is greater than.\n```\n"]}, {"name": "boto3.dynamodb.conditions.AttributeBase.gte", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute is greater than or equal to\n\n: the value.\n\n```\nparam value\n\nThe value that the attribute is greater than or equal to.\n```\n"]}, {"name": "boto3.dynamodb.conditions.AttributeBase.begins_with", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute begins with the value.\n\n```\nparam value\n\nThe value that the attribute begins with.\n```\n"]}, {"name": "boto3.dynamodb.conditions.AttributeBase.between", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "low_value", "type": null, "default": null}, {"name": "high_value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute is greater than or equal\nto the low value and less than or equal to the high value.\n\n```\nparam low_value\n\nThe value that the attribute is greater than or equal to.\n\nparam high_value\n\nThe value that the attribute is less than or equal to.\n```\n"]}, {"name": "boto3.dynamodb.conditions.AttributeBase.__eq__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeBase.__ne__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionAttributeBase", "bases": ["ConditionBase", "AttributeBase"], "methods": [{"name": "boto3.dynamodb.conditions.ConditionAttributeBase.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*values", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionAttributeBase.__eq__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionAttributeBase.__ne__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "other", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["This base class is for conditions that can have attribute methods.\n\nOne example is the Size condition. To complete a condition, you need\nto apply another AttributeBase method like eq()."]}, {"name": "boto3.dynamodb.conditions.ComparisonCondition", "bases": ["ConditionBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.ComparisonCondition.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.Equals", "bases": ["ComparisonCondition"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.Equals.expression_operator", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.NotEquals", "bases": ["ComparisonCondition"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.NotEquals.expression_operator", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.LessThan", "bases": ["ComparisonCondition"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.LessThan.expression_operator", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.LessThanEquals", "bases": ["ComparisonCondition"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.LessThanEquals.expression_operator", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.GreaterThan", "bases": ["ComparisonCondition"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.GreaterThan.expression_operator", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.GreaterThanEquals", "bases": ["ComparisonCondition"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.GreaterThanEquals.expression_operator", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.In", "bases": ["ComparisonCondition"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.In.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.In.has_grouped_values", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.Between", "bases": ["ConditionBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.Between.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.Between.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.BeginsWith", "bases": ["ConditionBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.BeginsWith.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.BeginsWith.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.Contains", "bases": ["ConditionBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.Contains.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.Contains.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.Size", "bases": ["ConditionAttributeBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.Size.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.Size.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeType", "bases": ["ConditionBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.AttributeType.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeType.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeExists", "bases": ["ConditionBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.AttributeExists.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeExists.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeNotExists", "bases": ["ConditionBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.AttributeNotExists.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.AttributeNotExists.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.And", "bases": ["ConditionBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.And.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.And.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.Or", "bases": ["ConditionBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.Or.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.Or.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.Not", "bases": ["ConditionBase"], "methods": [], "class_variables": [{"name": "boto3.dynamodb.conditions.Not.expression_operator", "type": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.Not.expression_format", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.Key", "bases": ["AttributeBase"], "methods": [], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.dynamodb.conditions.Attr", "bases": ["AttributeBase"], "methods": [{"name": "boto3.dynamodb.conditions.Attr.ne", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute is not equal to the value\n\n```\nparam value\n\nThe value that the attribute is not equal to.\n```\n"]}, {"name": "boto3.dynamodb.conditions.Attr.is_in", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute is in the value,\n\n```\ntype value\n\nlist\n\nparam value\n\nThe value that the attribute is in.\n```\n"]}, {"name": "boto3.dynamodb.conditions.Attr.exists", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute exists."]}, {"name": "boto3.dynamodb.conditions.Attr.not_exists", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute does not exist."]}, {"name": "boto3.dynamodb.conditions.Attr.contains", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition where the attribute contains the value.\n\n```\nparam value\n\nThe value the attribute contains.\n```\n"]}, {"name": "boto3.dynamodb.conditions.Attr.size", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition for the attribute size.\n\nNote another AttributeBase method must be called on the returned\nsize condition to be a valid DynamoDB condition."]}, {"name": "boto3.dynamodb.conditions.Attr.attribute_type", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": ["Creates a condition for the attribute type.\n\n```\nparam value\n\nThe type of the attribute.\n```\n"]}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["Represents an DynamoDB item's attribute."]}, {"name": "boto3.dynamodb.conditions.ConditionExpressionBuilder", "bases": [], "methods": [{"name": "boto3.dynamodb.conditions.ConditionExpressionBuilder.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionExpressionBuilder._get_name_placeholder", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionExpressionBuilder._get_value_placeholder", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionExpressionBuilder.reset", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Resets the placeholder name and values"]}, {"name": "boto3.dynamodb.conditions.ConditionExpressionBuilder.build_expression", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "condition", "type": null, "default": null}, {"name": "is_key_condition", "type": null, "default": "..."}], "returns": null, "documentation": ["Builds the condition expression and the dictionary of placeholders.\n\n```\ntype condition\n\nConditionBase\n\nparam condition\n\nA condition to be built into a condition expression\nstring with any necessary placeholders.\n\ntype is_key_condition\n\nBoolean\n\nparam is_key_condition\n\nTrue if the expression is for a\nKeyConditionExpression. False otherwise.\n\nrtype\n\n(string, dict, dict)\n\nreturns\n\nWill return a string representing the condition with\nplaceholders inserted where necessary, a dictionary of\nplaceholders for attribute names, and a dictionary of\nplaceholders for attribute values. Here is a sample return value:\n\n('#n0 = :v0', {'#n0': 'myattribute'}, {':v1': 'myvalue'})\n```\n"]}, {"name": "boto3.dynamodb.conditions.ConditionExpressionBuilder._build_expression", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "condition", "type": null, "default": null}, {"name": "attribute_name_placeholders", "type": null, "default": null}, {"name": "attribute_value_placeholders", "type": null, "default": null}, {"name": "is_key_condition", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionExpressionBuilder._build_expression_component", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}, {"name": "attribute_name_placeholders", "type": null, "default": null}, {"name": "attribute_value_placeholders", "type": null, "default": null}, {"name": "has_grouped_values", "type": null, "default": null}, {"name": "is_key_condition", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionExpressionBuilder._build_name_placeholder", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}, {"name": "attribute_name_placeholders", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.dynamodb.conditions.ConditionExpressionBuilder._build_value_placeholder", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "value", "type": null, "default": null}, {"name": "attribute_value_placeholders", "type": null, "default": null}, {"name": "has_grouped_values", "type": null, "default": "..."}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["This class is used to build condition expressions with placeholders"]}], "exports": []}, {"name": "boto3.docs.base", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [], "classes": [{"name": "boto3.docs.base.BaseDocumenter", "bases": [], "methods": [{"name": "boto3.docs.base.BaseDocumenter.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "resource", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.base.BaseDocumenter.class_name", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.base.NestedDocumenter", "bases": ["BaseDocumenter"], "methods": [{"name": "boto3.docs.base.NestedDocumenter.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "resource", "type": null, "default": null}, {"name": "root_docs_path", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.base.NestedDocumenter.class_name", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}, {"name": "boto3.docs.subresource", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.docs.subresource.document_sub_resource", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "sub_resource_model", "type": null, "default": null}, {"name": "service_model", "type": null, "default": null}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": ["Documents a resource action\n\n```\nparam section\n\nThe section to write to\n\nparam resource_name\n\nThe name of the resource\n\nparam sub_resource_model\n\nThe model of the subresource\n\nparam service_model\n\nThe model of the service\n\nparam include_signature\n\nWhether or not to include the signature.\nIt is useful for generating docstrings.\n```\n"]}], "variables": [], "classes": [{"name": "boto3.docs.subresource.SubResourceDocumenter", "bases": ["NestedDocumenter"], "methods": [{"name": "boto3.docs.subresource.SubResourceDocumenter.document_sub_resources", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}, {"name": "boto3.s3.transfer", "documentation": ["Abstractions over S3's upload/download operations.\n\nThis module provides high level abstractions for efficient\nuploads/downloads. It handles several things for the user:\n\n- Automatically switching to multipart transfers when\n  a file is over a specific size threshold\n- Uploading/downloading a file in parallel\n- Progress callbacks to monitor transfers\n- Retries. While botocore handles retries for streaming uploads,\n  it is not possible for it to handle retries for streaming\n  downloads. This module handles retries for both cases so\n  you don't need to implement any retry logic yourself.\n\nThis module has a reasonable set of defaults. It also allows you\nto configure many aspects of the transfer process including:\n\n- Multipart threshold size\n- Max parallel downloads\n- Socket timeouts\n- Retry amounts\n\nThere is no support for s3->s3 multipart copies at this\ntime.\n\n(ref-s3transfer-usage)=\n\n# Usage\n\nThe simplest way to use this module is:\n\n```python\nclient = boto3.client('s3', 'us-west-2')\ntransfer = S3Transfer(client)\n# Upload /tmp/myfile to s3://bucket/key\ntransfer.upload_file('/tmp/myfile', 'bucket', 'key')\n\n# Download s3://bucket/key to /tmp/myfile\ntransfer.download_file('bucket', 'key', '/tmp/myfile')\n```\n\nThe `upload_file` and `download_file` methods also accept\n`**kwargs`, which will be forwarded through to the corresponding\nclient operation. Here are a few examples using `upload_file`:\n\n```\n# Making the object public\ntransfer.upload_file('/tmp/myfile', 'bucket', 'key',\n                     extra_args={'ACL': 'public-read'})\n\n# Setting metadata\ntransfer.upload_file('/tmp/myfile', 'bucket', 'key',\n                     extra_args={'Metadata': {'a': 'b', 'c': 'd'}})\n\n# Setting content type\ntransfer.upload_file('/tmp/myfile.json', 'bucket', 'key',\n                     extra_args={'ContentType': \"application/json\"})\n```\n\nThe `S3Transfer` class also supports progress callbacks so you can\nprovide transfer progress to users. Both the `upload_file` and\n`download_file` methods take an optional `callback` parameter.\nHere's an example of how to print a simple progress percentage\nto the user:\n\n```python\nclass ProgressPercentage(object):\n    def __init__(self, filename):\n        self._filename = filename\n        self._size = float(os.path.getsize(filename))\n        self._seen_so_far = 0\n        self._lock = threading.Lock()\n\n    def __call__(self, bytes_amount):\n        # To simplify we'll assume this is hooked up\n        # to a single filename.\n        with self._lock:\n            self._seen_so_far += bytes_amount\n            percentage = (self._seen_so_far / self._size) * 100\n            sys.stdout.write(\n                \"\n```\n\n%s %s / %s (%.2f%%)\" % (\n\n: > > self.\\_filename, self.\\_seen_so_far, self.\\_size,\n  > > percentage))\n  >\n  > sys.stdout.flush()\n\n  transfer = S3Transfer(boto3.client('s3', 'us-west-2'))\n  \\# Upload /tmp/myfile to s3://bucket/key and print upload progress.\n  transfer.upload_file('/tmp/myfile', 'bucket', 'key',\n\n  > callback=ProgressPercentage('/tmp/myfile'))\n\nYou can also provide a TransferConfig object to the S3Transfer\nobject that gives you more fine grained control over the\ntransfer. For example:\n\n```python\nclient = boto3.client('s3', 'us-west-2')\nconfig = TransferConfig(\n    multipart_threshold=8 * 1024 * 1024,\n    max_concurrency=10,\n    num_download_attempts=10,\n)\ntransfer = S3Transfer(client, config)\ntransfer.upload_file('/tmp/foo', 'bucket', 'key')\n```\n", "Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.s3.transfer.create_transfer_manager", "asynchronous": false, "params": [{"name": "client", "type": null, "default": null}, {"name": "config", "type": null, "default": null}, {"name": "osutil", "type": null, "default": "..."}], "returns": null, "documentation": ["Creates a transfer manager based on configuration\n\n```\ntype client\n\nboto3.client\n\nparam client\n\nThe S3 client to use\n\ntype config\n\nboto3.s3.transfer.TransferConfig\n\nparam config\n\nThe transfer config to use\n\ntype osutil\n\ns3transfer.utils.OSUtils\n\nparam osutil\n\nThe os utility to use\n\nrtype\n\ns3transfer.manager.TransferManager\n\nreturns\n\nA transfer manager based on parameters provided\n```\n"]}, {"name": "boto3.s3.transfer._should_use_crt", "asynchronous": false, "params": [{"name": "config", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.s3.transfer.has_minimum_crt_version", "asynchronous": false, "params": [{"name": "minimum_version", "type": null, "default": null}], "returns": null, "documentation": ["Not intended for use outside boto3."]}, {"name": "boto3.s3.transfer._create_default_transfer_manager", "asynchronous": false, "params": [{"name": "client", "type": null, "default": null}, {"name": "config", "type": null, "default": null}, {"name": "osutil", "type": null, "default": null}], "returns": null, "documentation": ["Create the default TransferManager implementation for s3transfer."]}], "variables": [{"name": "boto3.s3.transfer.KB", "type": null, "documentation": []}, {"name": "boto3.s3.transfer.MB", "type": null, "documentation": []}, {"name": "boto3.s3.transfer.logger", "type": null, "documentation": []}], "classes": [{"name": "boto3.s3.transfer.TransferConfig", "bases": ["S3TransferConfig"], "methods": [{"name": "boto3.s3.transfer.TransferConfig.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "multipart_threshold", "type": null, "default": "..."}, {"name": "max_concurrency", "type": null, "default": "..."}, {"name": "multipart_chunksize", "type": null, "default": "..."}, {"name": "num_download_attempts", "type": null, "default": "..."}, {"name": "max_io_queue", "type": null, "default": "..."}, {"name": "io_chunksize", "type": null, "default": "..."}, {"name": "use_threads", "type": null, "default": "..."}, {"name": "max_bandwidth", "type": null, "default": "..."}, {"name": "preferred_transfer_client", "type": null, "default": "..."}], "returns": null, "documentation": ["Configuration object for managed S3 transfers\n\n```\nparam multipart_threshold\n\nThe transfer size threshold for which\nmultipart uploads, downloads, and copies will automatically be\ntriggered.\n\nparam max_concurrency\n\nThe maximum number of threads that will be\nmaking requests to perform a transfer. If use_threads is\nset to False, the value provided is ignored as the transfer\nwill only ever use the current thread.\n\nparam multipart_chunksize\n\nThe partition size of each part for a\nmultipart transfer.\n\nparam num_download_attempts\n\nThe number of download attempts that\nwill be retried upon errors with downloading an object in S3.\nNote that these retries account for errors that occur when\nstreaming  down the data from s3 (i.e. socket errors and read\ntimeouts that occur after receiving an OK response from s3).\nOther retryable exceptions such as throttling errors and 5xx\nerrors are already retried by botocore (this default is 5). This\ndoes not take into account the number of exceptions retried by\nbotocore.\n\nparam max_io_queue\n\nThe maximum amount of read parts that can be\nqueued in memory to be written for a download. The size of each\nof these read parts is at most the size of io_chunksize.\n\nparam io_chunksize\n\nThe max size of each chunk in the io queue.\nCurrently, this is size used when read is called on the\ndownloaded stream as well.\n\nparam use_threads\n\nIf True, threads will be used when performing\nS3 transfers. If False, no threads will be used in\nperforming transfers; all logic will be run in the current thread.\n\nparam max_bandwidth\n\nThe maximum bandwidth that will be consumed\nin uploading and downloading file content. The value is an integer\nin terms of bytes per second.\n\nparam preferred_transfer_client\n\nString specifying preferred transfer\nclient for transfer operations.\n\nCurrent supported settings are:\n\nauto (default) - Use the CRTTransferManager when calls\n\nare made with supported environment and settings.\n\nclassic - Only use the origin S3TransferManager with\n\nrequests. Disables possible CRT upgrade on requests.\n```\n"]}, {"name": "boto3.s3.transfer.TransferConfig.__setattr__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "name", "type": null, "default": null}, {"name": "value", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [{"name": "boto3.s3.transfer.TransferConfig.ALIAS", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.s3.transfer.S3Transfer", "bases": [], "methods": [{"name": "boto3.s3.transfer.S3Transfer.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "client", "type": null, "default": "..."}, {"name": "config", "type": null, "default": "..."}, {"name": "osutil", "type": null, "default": "..."}, {"name": "manager", "type": null, "default": "..."}], "returns": null, "documentation": []}, {"name": "boto3.s3.transfer.S3Transfer.upload_file", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "filename", "type": null, "default": null}, {"name": "bucket", "type": null, "default": null}, {"name": "key", "type": null, "default": null}, {"name": "callback", "type": null, "default": "..."}, {"name": "extra_args", "type": null, "default": "..."}], "returns": null, "documentation": ["Upload a file to an S3 object.\n\nVariants have also been injected into S3 client, Bucket and Object.\nYou don't have to use S3Transfer.upload_file() directly.\n\n:::{seealso}\n{py:meth}`S3.Client.upload_file`\n{py:meth}`S3.Client.upload_fileobj`\n:::\n"]}, {"name": "boto3.s3.transfer.S3Transfer.download_file", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "bucket", "type": null, "default": null}, {"name": "key", "type": null, "default": null}, {"name": "filename", "type": null, "default": null}, {"name": "extra_args", "type": null, "default": "..."}, {"name": "callback", "type": null, "default": "..."}], "returns": null, "documentation": ["Download an S3 object to a file.\n\nVariants have also been injected into S3 client, Bucket and Object.\nYou don't have to use S3Transfer.download_file() directly.\n\n:::{seealso}\n{py:meth}`S3.Client.download_file`\n{py:meth}`S3.Client.download_fileobj`\n:::\n"]}, {"name": "boto3.s3.transfer.S3Transfer._get_subscribers", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "callback", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.s3.transfer.S3Transfer.__enter__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.s3.transfer.S3Transfer.__exit__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [{"name": "boto3.s3.transfer.S3Transfer.ALLOWED_DOWNLOAD_ARGS", "type": null, "documentation": []}, {"name": "boto3.s3.transfer.S3Transfer.ALLOWED_UPLOAD_ARGS", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.s3.transfer.ProgressCallbackInvoker", "bases": ["BaseSubscriber"], "methods": [{"name": "boto3.s3.transfer.ProgressCallbackInvoker.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "callback", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.s3.transfer.ProgressCallbackInvoker.on_progress", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "bytes_transferred", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": ["A back-compat wrapper to invoke a provided callback via a subscriber\n\n```\nparam callback\n\nA callable that takes a single positional argument for\nhow many bytes were transferred.\n```\n"]}], "exports": []}, {"name": "boto3.docs.client", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [], "classes": [{"name": "boto3.docs.client.Boto3ClientDocumenter", "bases": ["ClientDocumenter"], "methods": [{"name": "boto3.docs.client.Boto3ClientDocumenter._add_client_creation_example", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}, {"name": "boto3.docs.waiter", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.docs.waiter.document_resource_waiter", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}, {"name": "service_model", "type": null, "default": null}, {"name": "resource_waiter_model", "type": null, "default": null}, {"name": "service_waiter_model", "type": null, "default": null}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": []}], "variables": [], "classes": [{"name": "boto3.docs.waiter.WaiterResourceDocumenter", "bases": ["NestedDocumenter"], "methods": [{"name": "boto3.docs.waiter.WaiterResourceDocumenter.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "resource", "type": null, "default": null}, {"name": "service_waiter_model", "type": null, "default": null}, {"name": "root_docs_path", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.waiter.WaiterResourceDocumenter.document_resource_waiters", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}, {"name": "boto3.docs.utils", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.docs.utils.get_resource_ignore_params", "asynchronous": false, "params": [{"name": "params", "type": null, "default": null}], "returns": null, "documentation": ["Helper method to determine which parameters to ignore for actions\n\n:returns: A list of the parameter names that does not need to be\n    included in a resource's method call for documentation purposes."]}, {"name": "boto3.docs.utils.is_resource_action", "asynchronous": false, "params": [{"name": "action_handle", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.utils.get_resource_public_actions", "asynchronous": false, "params": [{"name": "resource_class", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.utils.get_identifier_values_for_example", "asynchronous": false, "params": [{"name": "identifier_names", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.utils.get_identifier_args_for_signature", "asynchronous": false, "params": [{"name": "identifier_names", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.utils.get_identifier_description", "asynchronous": false, "params": [{"name": "resource_name", "type": null, "default": null}, {"name": "identifier_name", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.utils.add_resource_type_overview", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "resource_type", "type": null, "default": null}, {"name": "description", "type": null, "default": null}, {"name": "intro_link", "type": null, "default": "..."}], "returns": null, "documentation": []}], "variables": [], "classes": [{"name": "boto3.docs.utils.DocumentModifiedShape", "bases": [], "methods": [{"name": "boto3.docs.utils.DocumentModifiedShape.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "shape_name", "type": null, "default": null}, {"name": "new_type", "type": null, "default": null}, {"name": "new_description", "type": null, "default": null}, {"name": "new_example_value", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.utils.DocumentModifiedShape.replace_documentation_for_matching_shape", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "event_name", "type": null, "default": null}, {"name": "section", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.utils.DocumentModifiedShape._replace_documentation", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "event_name", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}, {"name": "boto3.docs", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.docs.generate_docs", "asynchronous": false, "params": [{"name": "root_dir", "type": null, "default": null}, {"name": "session", "type": null, "default": null}], "returns": null, "documentation": ["Generates the reference documentation for botocore\n\nThis will go through every available AWS service and output ReSTructured\ntext files documenting each service.\n\n```\nparam root_dir\n\nThe directory to write the reference files to. Each\nservice's reference documentation is located at\nroot_dir/reference/services/service-name.rst\n\nparam session\n\nThe boto3 session\n```\n"]}], "variables": [], "classes": [], "exports": [{"name": "boto3.docs.DEPRECATED_SERVICE_NAMES", "xref": {"fqname": "botocore.docs.DEPRECATED_SERVICE_NAMES", "project": "botocore"}}, {"name": "boto3.docs.ServiceDocumenter", "xref": {"fqname": "boto3.docs.service.ServiceDocumenter", "project": null}}]}, {"name": "boto3.docs.service", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [], "classes": [{"name": "boto3.docs.service.ServiceDocumenter", "bases": ["BaseServiceDocumenter"], "methods": [{"name": "boto3.docs.service.ServiceDocumenter.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "service_name", "type": null, "default": null}, {"name": "session", "type": null, "default": null}, {"name": "root_docs_path", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.service.ServiceDocumenter.document_service", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": ["Documents an entire service.\n\n:returns: The reStructured text of the documented service."]}, {"name": "boto3.docs.service.ServiceDocumenter.client_api", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.service.ServiceDocumenter.resource_section", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.service.ServiceDocumenter._document_service_resource", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.service.ServiceDocumenter._document_resources", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.service.ServiceDocumenter._get_example_file", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.service.ServiceDocumenter._document_examples", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [{"name": "boto3.docs.service.ServiceDocumenter.EXAMPLE_PATH", "type": null, "documentation": []}], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}, {"name": "boto3.docs.docstring", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [], "classes": [{"name": "boto3.docs.docstring.ActionDocstring", "bases": ["LazyLoadedDocstring"], "methods": [{"name": "boto3.docs.docstring.ActionDocstring._write_docstring", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.docstring.LoadReloadDocstring", "bases": ["LazyLoadedDocstring"], "methods": [{"name": "boto3.docs.docstring.LoadReloadDocstring._write_docstring", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.docstring.SubResourceDocstring", "bases": ["LazyLoadedDocstring"], "methods": [{"name": "boto3.docs.docstring.SubResourceDocstring._write_docstring", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.docstring.AttributeDocstring", "bases": ["LazyLoadedDocstring"], "methods": [{"name": "boto3.docs.docstring.AttributeDocstring._write_docstring", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.docstring.IdentifierDocstring", "bases": ["LazyLoadedDocstring"], "methods": [{"name": "boto3.docs.docstring.IdentifierDocstring._write_docstring", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.docstring.ReferenceDocstring", "bases": ["LazyLoadedDocstring"], "methods": [{"name": "boto3.docs.docstring.ReferenceDocstring._write_docstring", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.docstring.CollectionDocstring", "bases": ["LazyLoadedDocstring"], "methods": [{"name": "boto3.docs.docstring.CollectionDocstring._write_docstring", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.docstring.CollectionMethodDocstring", "bases": ["LazyLoadedDocstring"], "methods": [{"name": "boto3.docs.docstring.CollectionMethodDocstring._write_docstring", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.docstring.BatchActionDocstring", "bases": ["LazyLoadedDocstring"], "methods": [{"name": "boto3.docs.docstring.BatchActionDocstring._write_docstring", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.docstring.ResourceWaiterDocstring", "bases": ["LazyLoadedDocstring"], "methods": [{"name": "boto3.docs.docstring.ResourceWaiterDocstring._write_docstring", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}, {"name": "boto3.docs.method", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.docs.method.document_model_driven_resource_method", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "method_name", "type": null, "default": null}, {"name": "operation_model", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}, {"name": "method_description", "type": null, "default": "..."}, {"name": "example_prefix", "type": null, "default": "..."}, {"name": "include_input", "type": null, "default": "..."}, {"name": "include_output", "type": null, "default": "..."}, {"name": "exclude_input", "type": null, "default": "..."}, {"name": "exclude_output", "type": null, "default": "..."}, {"name": "document_output", "type": null, "default": "..."}, {"name": "resource_action_model", "type": null, "default": "..."}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": []}, {"name": "boto3.docs.method._method_returns_resource_list", "asynchronous": false, "params": [{"name": "resource", "type": null, "default": null}], "returns": null, "documentation": []}], "variables": [], "classes": [], "exports": []}, {"name": "boto3.s3.inject", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.s3.inject.inject_s3_transfer_methods", "asynchronous": false, "params": [{"name": "class_attributes", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.s3.inject.inject_bucket_methods", "asynchronous": false, "params": [{"name": "class_attributes", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.s3.inject.inject_object_methods", "asynchronous": false, "params": [{"name": "class_attributes", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.s3.inject.inject_object_summary_methods", "asynchronous": false, "params": [{"name": "class_attributes", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.s3.inject.bucket_load", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Calls s3.Client.list_buckets() to update the attributes of the Bucket\nresource."]}, {"name": "boto3.s3.inject.object_summary_load", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "*args", "type": null, "default": null}, {"name": "**kwargs", "type": null, "default": null}], "returns": null, "documentation": ["Calls s3.Client.head_object to update the attributes of the ObjectSummary\nresource."]}, {"name": "boto3.s3.inject.upload_file", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Filename", "type": null, "default": null}, {"name": "Bucket", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Upload a file to an S3 object.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.client('s3')\ns3.upload_file('/tmp/hello.txt', 'amzn-s3-demo-bucket', 'hello.txt')\n```\n\nSimilar behavior as S3Transfer's upload_file() method, except that\nargument names are capitalized. Detailed examples can be found at\n{ref}`S3Transfer's Usage <ref_s3transfer_usage>`.\n\n```\ntype Filename\n\nstr\n\nparam Filename\n\nThe path to the file to upload.\n\ntype Bucket\n\nstr\n\nparam Bucket\n\nThe name of the bucket to upload to.\n\ntype Key\n\nstr\n\nparam Key\n\nThe name of the key to upload to.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed upload arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the upload.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ntransfer.\n```\n"]}, {"name": "boto3.s3.inject.download_file", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Bucket", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}, {"name": "Filename", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Download an S3 object to a file.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.client('s3')\ns3.download_file('amzn-s3-demo-bucket', 'hello.txt', '/tmp/hello.txt')\n```\n\nSimilar behavior as S3Transfer's download_file() method,\nexcept that parameters are capitalized. Detailed examples can be found at\n{ref}`S3Transfer's Usage <ref_s3transfer_usage>`.\n\n```\ntype Bucket\n\nstr\n\nparam Bucket\n\nThe name of the bucket to download from.\n\ntype Key\n\nstr\n\nparam Key\n\nThe name of the key to download from.\n\ntype Filename\n\nstr\n\nparam Filename\n\nThe path to the file to download to.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed download arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the download.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ntransfer.\n```\n"]}, {"name": "boto3.s3.inject.bucket_upload_file", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Filename", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Upload a file to an S3 object.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\ns3.Bucket('amzn-s3-demo-bucket').upload_file('/tmp/hello.txt', 'hello.txt')\n```\n\nSimilar behavior as S3Transfer's upload_file() method,\nexcept that parameters are capitalized. Detailed examples can be found at\n{ref}`S3Transfer's Usage <ref_s3transfer_usage>`.\n\n```\ntype Filename\n\nstr\n\nparam Filename\n\nThe path to the file to upload.\n\ntype Key\n\nstr\n\nparam Key\n\nThe name of the key to upload to.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed upload arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the upload.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ntransfer.\n```\n"]}, {"name": "boto3.s3.inject.bucket_download_file", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}, {"name": "Filename", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Download an S3 object to a file.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\ns3.Bucket('amzn-s3-demo-bucket').download_file('hello.txt', '/tmp/hello.txt')\n```\n\nSimilar behavior as S3Transfer's download_file() method,\nexcept that parameters are capitalized. Detailed examples can be found at\n{ref}`S3Transfer's Usage <ref_s3transfer_usage>`.\n\n```\ntype Key\n\nstr\n\nparam Key\n\nThe name of the key to download from.\n\ntype Filename\n\nstr\n\nparam Filename\n\nThe path to the file to download to.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed download arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the download.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ntransfer.\n```\n"]}, {"name": "boto3.s3.inject.object_upload_file", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Filename", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Upload a file to an S3 object.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\ns3.Object('amzn-s3-demo-bucket', 'hello.txt').upload_file('/tmp/hello.txt')\n```\n\nSimilar behavior as S3Transfer's upload_file() method,\nexcept that parameters are capitalized. Detailed examples can be found at\n{ref}`S3Transfer's Usage <ref_s3transfer_usage>`.\n\n```\ntype Filename\n\nstr\n\nparam Filename\n\nThe path to the file to upload.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed upload arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the upload.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ntransfer.\n```\n"]}, {"name": "boto3.s3.inject.object_download_file", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Filename", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Download an S3 object to a file.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\ns3.Object('amzn-s3-demo-bucket', 'hello.txt').download_file('/tmp/hello.txt')\n```\n\nSimilar behavior as S3Transfer's download_file() method,\nexcept that parameters are capitalized. Detailed examples can be found at\n{ref}`S3Transfer's Usage <ref_s3transfer_usage>`.\n\n```\ntype Filename\n\nstr\n\nparam Filename\n\nThe path to the file to download to.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed download arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the download.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ntransfer.\n```\n"]}, {"name": "boto3.s3.inject.copy", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "CopySource", "type": null, "default": null}, {"name": "Bucket", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "SourceClient", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Copy an object from one S3 location to another.\n\nThis is a managed transfer which will perform a multipart copy in\nmultiple threads if necessary.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\ncopy_source = {\n    'Bucket': 'amzn-s3-demo-bucket1',\n    'Key': 'mykey'\n}\ns3.meta.client.copy(copy_source, 'amzn-s3-demo-bucket2', 'otherkey')\n```\n\n```\ntype CopySource\n\ndict\n\nparam CopySource\n\nThe name of the source bucket, key name of the\nsource object, and optional version ID of the source object. The\ndictionary format is:\n{'Bucket': 'bucket', 'Key': 'key', 'VersionId': 'id'}. Note\nthat the VersionId key is optional and may be omitted.\n\ntype Bucket\n\nstr\n\nparam Bucket\n\nThe name of the bucket to copy to\n\ntype Key\n\nstr\n\nparam Key\n\nThe name of the key to copy to\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed download arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the copy.\n\ntype SourceClient\n\nbotocore or boto3 Client\n\nparam SourceClient\n\nThe client to be used for operation that\nmay happen at the source object. For example, this client is\nused for the head_object that determines the size of the copy.\nIf no client is provided, the current client is used as the client\nfor the source object.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ncopy.\n```\n"]}, {"name": "boto3.s3.inject.bucket_copy", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "CopySource", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "SourceClient", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Copy an object from one S3 location to an object in this bucket.\n\nThis is a managed transfer which will perform a multipart copy in\nmultiple threads if necessary.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\ncopy_source = {\n    'Bucket': 'amzn-s3-demo-bucket1',\n    'Key': 'mykey'\n}\nbucket = s3.Bucket('amzn-s3-demo-bucket2')\nbucket.copy(copy_source, 'otherkey')\n```\n\n```\ntype CopySource\n\ndict\n\nparam CopySource\n\nThe name of the source bucket, key name of the\nsource object, and optional version ID of the source object. The\ndictionary format is:\n{'Bucket': 'bucket', 'Key': 'key', 'VersionId': 'id'}. Note\nthat the VersionId key is optional and may be omitted.\n\ntype Key\n\nstr\n\nparam Key\n\nThe name of the key to copy to\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed download arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the copy.\n\ntype SourceClient\n\nbotocore or boto3 Client\n\nparam SourceClient\n\nThe client to be used for operation that\nmay happen at the source object. For example, this client is\nused for the head_object that determines the size of the copy.\nIf no client is provided, the current client is used as the client\nfor the source object.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ncopy.\n```\n"]}, {"name": "boto3.s3.inject.object_copy", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "CopySource", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "SourceClient", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Copy an object from one S3 location to this object.\n\nThis is a managed transfer which will perform a multipart copy in\nmultiple threads if necessary.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\ncopy_source = {\n    'Bucket': 'amzn-s3-demo-bucket1',\n    'Key': 'mykey'\n}\nbucket = s3.Bucket('amzn-s3-demo-bucket2')\nobj = bucket.Object('otherkey')\nobj.copy(copy_source)\n```\n\n```\ntype CopySource\n\ndict\n\nparam CopySource\n\nThe name of the source bucket, key name of the\nsource object, and optional version ID of the source object. The\ndictionary format is:\n{'Bucket': 'bucket', 'Key': 'key', 'VersionId': 'id'}. Note\nthat the VersionId key is optional and may be omitted.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed download arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the copy.\n\ntype SourceClient\n\nbotocore or boto3 Client\n\nparam SourceClient\n\nThe client to be used for operation that\nmay happen at the source object. For example, this client is\nused for the head_object that determines the size of the copy.\nIf no client is provided, the current client is used as the client\nfor the source object.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ncopy.\n```\n"]}, {"name": "boto3.s3.inject.upload_fileobj", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Fileobj", "type": null, "default": null}, {"name": "Bucket", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Upload a file-like object to S3.\n\nThe file-like object must be in binary mode.\n\nThis is a managed transfer which will perform a multipart upload in\nmultiple threads if necessary.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.client('s3')\n\nwith open('filename', 'rb') as data:\n    s3.upload_fileobj(data, 'amzn-s3-demo-bucket', 'mykey')\n```\n\n```\ntype Fileobj\n\na file-like object\n\nparam Fileobj\n\nA file-like object to upload. At a minimum, it must\nimplement the  method, and must return bytes.\n\ntype Bucket\n\nstr\n\nparam Bucket\n\nThe name of the bucket to upload to.\n\ntype Key\n\nstr\n\nparam Key\n\nThe name of the key to upload to.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed upload arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the upload.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\nupload.\n```\n"]}, {"name": "boto3.s3.inject.bucket_upload_fileobj", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Fileobj", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Upload a file-like object to this bucket.\n\nThe file-like object must be in binary mode.\n\nThis is a managed transfer which will perform a multipart upload in\nmultiple threads if necessary.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('amzn-s3-demo-bucket')\n\nwith open('filename', 'rb') as data:\n    bucket.upload_fileobj(data, 'mykey')\n```\n\n```\ntype Fileobj\n\na file-like object\n\nparam Fileobj\n\nA file-like object to upload. At a minimum, it must\nimplement the  method, and must return bytes.\n\ntype Key\n\nstr\n\nparam Key\n\nThe name of the key to upload to.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed upload arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the upload.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\nupload.\n```\n"]}, {"name": "boto3.s3.inject.object_upload_fileobj", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Fileobj", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Upload a file-like object to this object.\n\nThe file-like object must be in binary mode.\n\nThis is a managed transfer which will perform a multipart upload in\nmultiple threads if necessary.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('amzn-s3-demo-bucket')\nobj = bucket.Object('mykey')\n\nwith open('filename', 'rb') as data:\n    obj.upload_fileobj(data)\n```\n\n```\ntype Fileobj\n\na file-like object\n\nparam Fileobj\n\nA file-like object to upload. At a minimum, it must\nimplement the  method, and must return bytes.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed upload arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the upload.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\nupload.\n```\n"]}, {"name": "boto3.s3.inject.download_fileobj", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Bucket", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}, {"name": "Fileobj", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Download an object from S3 to a file-like object.\n\nThe file-like object must be in binary mode.\n\nThis is a managed transfer which will perform a multipart download in\nmultiple threads if necessary.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.client('s3')\n\nwith open('filename', 'wb') as data:\n    s3.download_fileobj('amzn-s3-demo-bucket', 'mykey', data)\n```\n\n```\ntype Bucket\n\nstr\n\nparam Bucket\n\nThe name of the bucket to download from.\n\ntype Key\n\nstr\n\nparam Key\n\nThe name of the key to download from.\n\ntype Fileobj\n\na file-like object\n\nparam Fileobj\n\nA file-like object to download into. At a minimum, it must\nimplement the  method and must accept bytes.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed download arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the download.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ndownload.\n```\n"]}, {"name": "boto3.s3.inject.bucket_download_fileobj", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Key", "type": null, "default": null}, {"name": "Fileobj", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Download an object from this bucket to a file-like-object.\n\nThe file-like object must be in binary mode.\n\nThis is a managed transfer which will perform a multipart download in\nmultiple threads if necessary.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('amzn-s3-demo-bucket')\n\nwith open('filename', 'wb') as data:\n    bucket.download_fileobj('mykey', data)\n```\n\n```\ntype Fileobj\n\na file-like object\n\nparam Fileobj\n\nA file-like object to download into. At a minimum, it must\nimplement the  method and must accept bytes.\n\ntype Key\n\nstr\n\nparam Key\n\nThe name of the key to download from.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed download arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the download.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ndownload.\n```\n"]}, {"name": "boto3.s3.inject.object_download_fileobj", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "Fileobj", "type": null, "default": null}, {"name": "ExtraArgs", "type": null, "default": "..."}, {"name": "Callback", "type": null, "default": "..."}, {"name": "Config", "type": null, "default": "..."}], "returns": null, "documentation": ["Download this object from S3 to a file-like object.\n\nThe file-like object must be in binary mode.\n\nThis is a managed transfer which will perform a multipart download in\nmultiple threads if necessary.\n\nUsage:\n\n```\nimport boto3\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('amzn-s3-demo-bucket')\nobj = bucket.Object('mykey')\n\nwith open('filename', 'wb') as data:\n    obj.download_fileobj(data)\n```\n\n```\ntype Fileobj\n\na file-like object\n\nparam Fileobj\n\nA file-like object to download into. At a minimum, it must\nimplement the  method and must accept bytes.\n\ntype ExtraArgs\n\ndict\n\nparam ExtraArgs\n\nExtra arguments that may be passed to the\nclient operation. For allowed download arguments see\n.\n\ntype Callback\n\nfunction\n\nparam Callback\n\nA method which takes a number of bytes transferred to\nbe periodically called during the download.\n\ntype Config\n\nboto3.s3.transfer.TransferConfig\n\nparam Config\n\nThe transfer configuration to be used when performing the\ndownload.\n```\n"]}], "variables": [], "classes": [], "exports": []}, {"name": "boto3.docs.collection", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.docs.collection.document_collection_object", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "collection_model", "type": null, "default": null}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": ["Documents a collection resource object\n\n```\nparam section\n\nThe section to write to\n\nparam collection_model\n\nThe model of the collection\n\nparam include_signature\n\nWhether or not to include the signature.\nIt is useful for generating docstrings.\n```\n"]}, {"name": "boto3.docs.collection.document_batch_action", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}, {"name": "batch_action_model", "type": null, "default": null}, {"name": "service_model", "type": null, "default": null}, {"name": "collection_model", "type": null, "default": null}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": ["Documents a collection's batch action\n\n```\nparam section\n\nThe section to write to\n\nparam resource_name\n\nThe name of the resource\n\nparam action_name\n\nThe name of collection action. Currently only\ncan be all, filter, limit, or page_size\n\nparam event_emitter\n\nThe event emitter to use to emit events\n\nparam batch_action_model\n\nThe model of the batch action\n\nparam collection_model\n\nThe model of the collection\n\nparam service_model\n\nThe model of the service\n\nparam include_signature\n\nWhether or not to include the signature.\nIt is useful for generating docstrings.\n```\n"]}, {"name": "boto3.docs.collection.document_collection_method", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "action_name", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}, {"name": "collection_model", "type": null, "default": null}, {"name": "service_model", "type": null, "default": null}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": ["Documents a collection method\n\n```\nparam section\n\nThe section to write to\n\nparam resource_name\n\nThe name of the resource\n\nparam action_name\n\nThe name of collection action. Currently only\ncan be all, filter, limit, or page_size\n\nparam event_emitter\n\nThe event emitter to use to emit events\n\nparam collection_model\n\nThe model of the collection\n\nparam service_model\n\nThe model of the service\n\nparam include_signature\n\nWhether or not to include the signature.\nIt is useful for generating docstrings.\n```\n"]}], "variables": [], "classes": [{"name": "boto3.docs.collection.CollectionDocumenter", "bases": ["NestedDocumenter"], "methods": [{"name": "boto3.docs.collection.CollectionDocumenter.document_collections", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.collection.CollectionDocumenter._document_collection", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}, {"name": "collection", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}, {"name": "boto3.docs.resource", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [], "variables": [], "classes": [{"name": "boto3.docs.resource.ResourceDocumenter", "bases": ["BaseDocumenter"], "methods": [{"name": "boto3.docs.resource.ResourceDocumenter.__init__", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "resource", "type": null, "default": null}, {"name": "botocore_session", "type": null, "default": null}, {"name": "root_docs_path", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter.document_resource", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_title", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_intro", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_description", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_example", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}, {"name": "identifier_names", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_params_description", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}, {"name": "identifier_names", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_overview_of_member_type", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}, {"name": "resource_member_type", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_identifiers", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_attributes", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_references", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_actions", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_sub_resources", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_collections", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_waiters", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ResourceDocumenter._add_resource_note", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}, {"name": "boto3.docs.resource.ServiceResourceDocumenter", "bases": ["ResourceDocumenter"], "methods": [{"name": "boto3.docs.resource.ServiceResourceDocumenter.class_name", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ServiceResourceDocumenter._add_title", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ServiceResourceDocumenter._add_description", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}, {"name": "boto3.docs.resource.ServiceResourceDocumenter._add_example", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}, {"name": "identifier_names", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}, {"name": "boto3.docs.action", "documentation": ["Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "Licensed under the Apache License, Version 2.0 (the \"License\"). You", "may not use this file except in compliance with the License. A copy of", "the License is located at", "https://aws.amazon.com/apache2.0/", "or in the \"license\" file accompanying this file. This file is", "distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF", "ANY KIND, either express or implied. See the License for the specific", "language governing permissions and limitations under the License."], "functions": [{"name": "boto3.docs.action.document_action", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}, {"name": "action_model", "type": null, "default": null}, {"name": "service_model", "type": null, "default": null}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": ["Documents a resource action\n\n```\nparam section\n\nThe section to write to\n\nparam resource_name\n\nThe name of the resource\n\nparam event_emitter\n\nThe event emitter to use to emit events\n\nparam action_model\n\nThe model of the action\n\nparam service_model\n\nThe model of the service\n\nparam include_signature\n\nWhether or not to include the signature.\nIt is useful for generating docstrings.\n```\n"]}, {"name": "boto3.docs.action.document_load_reload_action", "asynchronous": false, "params": [{"name": "section", "type": null, "default": null}, {"name": "action_name", "type": null, "default": null}, {"name": "resource_name", "type": null, "default": null}, {"name": "event_emitter", "type": null, "default": null}, {"name": "load_model", "type": null, "default": null}, {"name": "service_model", "type": null, "default": null}, {"name": "include_signature", "type": null, "default": "..."}], "returns": null, "documentation": ["Documents the resource load action\n\n```\nparam section\n\nThe section to write to\n\nparam action_name\n\nThe name of the loading action should be load or reload\n\nparam resource_name\n\nThe name of the resource\n\nparam event_emitter\n\nThe event emitter to use to emit events\n\nparam load_model\n\nThe model of the load action\n\nparam service_model\n\nThe model of the service\n\nparam include_signature\n\nWhether or not to include the signature.\nIt is useful for generating docstrings.\n```\n"]}], "variables": [{"name": "boto3.docs.action.PUT_DATA_WARNING_MESSAGE", "type": null, "documentation": []}, {"name": "boto3.docs.action.WARNING_MESSAGES", "type": null, "documentation": []}, {"name": "boto3.docs.action.IGNORE_PARAMS", "type": null, "documentation": []}], "classes": [{"name": "boto3.docs.action.ActionDocumenter", "bases": ["NestedDocumenter"], "methods": [{"name": "boto3.docs.action.ActionDocumenter.document_actions", "asynchronous": false, "params": [{"name": "self", "type": null, "default": null}, {"name": "section", "type": null, "default": null}], "returns": null, "documentation": []}], "class_variables": [], "instance_variables": [], "inner_classes": [], "documentation": []}], "exports": []}]}